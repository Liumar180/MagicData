package com.integrity.lawCase.fileManage.action;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.json.annotations.JSON;

import com.integrity.lawCase.fileManage.service.FileManageService;
import com.opensymphony.xwork2.ActionSupport;

public class FileDownloadAction extends ActionSupport{
	
	private Long id;//文件id
	private String annexUrl;
	private String annexName;
	private String fileNameD;
	private String type;
	private FileManageService fileManageService;

	public String downloadFile(){
		return SUCCESS;
	}
	public InputStream getDownloadFileStream(){
		String directory ="";
		if(id!=null){
			 directory = "/images/uploadFile/"+fileManageService.getFileinfoByid(id).getAnnexName()+"/";
		}else{
			 directory = "/images/exportFile/"+type+"M/ex"+type+"/";
		}
		String targetDirectory = ServletActionContext.getServletContext().getRealPath(directory);
		try {
			try {
				fileNameD = URLDecoder.decode(fileNameD, "UTF-8");
			} catch (UnsupportedEncodingException e) {
				e.printStackTrace();
			}
			return new FileInputStream(new File(targetDirectory, fileNameD));
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		return null;
	}
	@JSON(serialize=false)
	public Long getId() {
		return id;
	}
	public void setId(Long id) {
		this.id = id;
	}
	@JSON(serialize=false)
	public String getFileNameD() {
		try {
			fileNameD = new String(fileNameD.getBytes(), "ISO8859-1");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
		return fileNameD;
	}
	public void setFileNameD(String fileNameD) {
		this.fileNameD = fileNameD;
	}@JSON(serialize=false)
	public String getAnnexUrl() {
		return annexUrl;
	}
	public void setAnnexUrl(String annexUrl) {
		this.annexUrl = annexUrl;
	}@JSON(serialize=false)
	public String getAnnexName() {
		return annexName;
	}
	public void setAnnexName(String annexName) {
		this.annexName = annexName;
	}@JSON(serialize=false)
	public FileManageService getFileManageService() {
		return fileManageService;
	}
	public void setFileManageService(FileManageService fileManageService) {
		this.fileManageService = fileManageService;
	}@JSON(serialize=false)
	public String getType() {
		return type;
	}
	public void setType(String type) {
		this.type = type;
	}
	
}
