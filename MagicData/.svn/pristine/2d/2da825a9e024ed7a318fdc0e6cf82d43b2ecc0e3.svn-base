<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0063)http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html -->
<html xmlns="http://www.w3.org/1999/xhtml" lang="zh-cn"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<title>Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园</title>
<link type="text/css" rel="stylesheet" href="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/blog-common.css">
<link id="MainCss" type="text/css" rel="stylesheet" href="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/bundle-SimpleBlue.css">
<link type="text/css" rel="stylesheet" href="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/98534.css">
<link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/xia520pi/rss">
<link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/xia520pi/rsd.xml">
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/xia520pi/wlwmanifest.xml">
<script async="" type="text/javascript" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/gpt.js"></script><script src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/jquery.js" type="text/javascript"></script>  
<script type="text/javascript">var currentBlogApp = 'xia520pi', cb_enable_mathjax=false;</script>
<script src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/blog-common.js" type="text/javascript"></script>
<script src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/pubads_impl_78.js" async=""></script></head>
<body>
<a name="top"></a>

<div id="home">
<div id="header">
	<div id="blogTitle">
		
<!--done-->
<div class="title"><a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/xia520pi/">虾皮工作室</a></div>
<div class="subtitle">赠人玫瑰，手留余香。
http://www.xiapistudio.com/</div>



		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li id="nav_sitehome"><a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/">博客园</a></li>
<li id="nav_myhome"><a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/xia520pi/">首页</a></li>
<li id="nav_q"><a class="menu" href="http://q.cnblogs.com/">博问</a></li>
<li id="nav_ing"><a class="menu" href="http://home.cnblogs.com/ing/">闪存</a></li>
<li id="nav_newpost"><a id="MyLinks1_NewPostLink" class="menu" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1">新随笔</a></li>
<li id="nav_contact"><a id="MyLinks1_ContactLink" class="menu" rel="nofollow" href="http://msg.cnblogs.com/send/%E8%99%BE%E7%9A%AE">联系</a></li>
<li id="nav_rss"><a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/xia520pi/rss">订阅</a>
<!--<a id="MyLinks1_XMLLink" class="aHeaderXML" href="http://www.cnblogs.com/xia520pi/rss"><img src="http://www.cnblogs.com/images/xml.gif" alt="订阅" /></a>--></li>
<li id="nav_admin"><a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/">管理</a></li>
</ul>

		<div class="blogStats">
			
			
<!--done-->
随笔-106&nbsp;
文章-0&nbsp;
评论-628&nbsp;

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
<div id="post_detail">
<!--done-->
<div id="topics">
	<div class="post">
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2" href="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园.html">Hadoop集群（第6期）_WordCount运行详解</a>
		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body"><p style="text-align: justify;">&nbsp;</p>
<h2>1、MapReduce理论简介</h2>
<p style="text-align: justify;">&nbsp;</p>
<h3>1.1 MapReduce编程模型</h3>
<p>　　MapReduce采用"分而治之"的思想，把对大规模数据集的操作，分发给一个主节点管理下的各个分节点共同完成，然后通过整合各个节点的中间结果，得到最终结果。简单地说，MapReduce就是"任务的分解与结果的汇总"。</p>
<p>　　在Hadoop中，用于执行MapReduce任务的机器角色有两个：一个是JobTracker；另一个是TaskTracker，JobTracker是用于调度工作的，TaskTracker是用于执行工作的。一个Hadoop集群中只有一台JobTracker。</p>
<p>　　在分布式计算中，MapReduce框架负责处理了并行编程中分布式存储、工作调度、负载均衡、容错均衡、容错处理以及网络通信等复杂问题，把处理过程高度抽象为两个函数：map和reduce，map负责把任务分解成多个任务，reduce负责把分解后多任务处理的结果汇总起来。</p>
<p>　　需要注意的是，用MapReduce来处理的数据集（或任务）必须具备这样的特点：待处理的数据集可以分解成许多小的数据集，而且每一个小数据集都可以完全并行地进行处理。</p>
<p style="text-align: justify;">&nbsp;</p>
<h3>1.2 MapReduce处理过程</h3>
<p>　　在Hadoop中，每个MapReduce任务都被初始化为一个Job，每个Job又可以分为两种阶段：map阶段和reduce阶段。这两个阶段分别用两个函数表示，即map函数和reduce函数。map函数接收一个&lt;key,value&gt;形式的输入，然后同样产生一个&lt;key,value&gt;形式的中间输出，Hadoop函数接收一个如&lt;key,(list of values)&gt;形式的输入，然后对这个value集合进行处理，每个reduce产生0或1个输出，reduce的输出也是&lt;key,value&gt;形式的。</p>
<p>&nbsp;</p>
<p style="text-align: center;">&nbsp;<a href="http://images.cnblogs.com/cnblogs_com/xia520pi/201205/201205161645307855.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/201205161645335639.png" alt="image" width="621" height="243" border="0"></a></p>
<p style="text-align: center;">MapReduce处理大数据集的过程</p>
<p>&nbsp;</p>
<p style="text-align: justify;">&nbsp;</p>
<h2>2、运行WordCount程序</h2>
<p>　　单词计数是最简单也是最能体现MapReduce思想的程序之一，可以称为MapReduce版"Hello World"，该程序的完整代码可以在Hadoop安装包的"src/examples"目录下找到。单词计数主要完成功能是：统计一系列文本文件中每个单词出现的次数，如下图所示。</p>
<p>&nbsp;</p>
<p style="text-align: center;">&nbsp;<a href="http://images.cnblogs.com/cnblogs_com/xia520pi/201205/201205161651486331.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/201205161651502512.png" alt="image" width="323" height="150" border="0"></a></p>
<p style="text-align: justify;">&nbsp;</p>
<h3>2.1 准备工作</h3>
<p>　　现在以"hadoop"普通用户登录"Master.Hadoop"服务器。</p>
<p><span style="color: #3366ff;"><strong>　　1）创建本地示例文件 </strong></span></p>
<p>　　首先在"/home/hadoop"目录下创建文件夹"file"。</p>
<p>&nbsp;</p>
<p>&nbsp;<a href="http://images.cnblogs.com/cnblogs_com/xia520pi/201205/201205171119098393.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/201205171119104149.png" alt="image" width="712" height="246" border="0"></a></p>
<p>&nbsp;</p>
<p>　　接着创建两个文本文件file1.txt和file2.txt，使file1.txt内容为"Hello World"，而file2.txt的内容为"Hello Hadoop"。</p>
<p>&nbsp;</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/xia520pi/201205/201205171119112655.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/201205171119158015.png" alt="image" width="608" height="266" border="0"></a></p>
<p>&nbsp;</p>
<p><span style="color: #3366ff;"><strong>　　2）在HDFS上创建输入文件夹 </strong></span></p>
<p>&nbsp;</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/xia520pi/201205/201205171119165997.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/201205171119175898.png" alt="image" width="732" height="119" border="0"></a></p>
<p>&nbsp;</p>
<p><span style="color: #3366ff;"><strong>　　3）上传本地file中文件到集群的input目录下 </strong></span></p>
<p>&nbsp;</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/xia520pi/201205/201205171119189387.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/201205171119192668.png" alt="image" width="732" height="134" border="0"></a></p>
<p>&nbsp;</p>
<h3>2.2 运行例子</h3>
<p><span style="color: #3366ff;"><strong>　　1）在集群上运行WordCount程序 </strong></span></p>
<p><span style="color: red;"><strong>　　备注：</strong></span>以input作为输入目录，output目录作为输出目录。</p>
<p>　　已经编译好的WordCount的Jar在"/usr/hadoop"下面，就是"hadoop-examples-1.0.0.jar"，所以在下面执行命令时记得把路径写全了，不然会提示找不到该Jar包。</p>
<p>&nbsp;</p>
<p>&nbsp;<a href="http://images.cnblogs.com/cnblogs_com/xia520pi/201205/201205171119199222.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/201205171119212994.png" alt="image" width="847" height="190" border="0"></a></p>
<p>&nbsp;</p>
<p><span style="color: #3366ff;"><strong>　　2）MapReduce执行过程显示信息 </strong></span></p>
<p>&nbsp;</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/xia520pi/201205/201205171119218467.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/201205171119237746.png" alt="image" width="892" height="197" border="0"></a></p>
<p>&nbsp;</p>
<p>　　Hadoop命令会启动一个JVM来运行这个MapReduce程序，并自动获得Hadoop的配置，同时把类的路径（及其依赖关系）加入到Hadoop的库中。以上就是Hadoop Job的运行记录，从这里可以看到，这个Job被赋予了一个ID号：job_201202292213_0002，而且得知输入文件有两个（Total input paths to process : 2），同时还可以了解map的输入输出记录（record数及字节数），以及reduce输入输出记录。比如说，在本例中，map的task数量是2个，reduce的task数量是一个。map的输入record数是2个，输出record数是4个等信息。</p>
<p style="text-align: justify;">&nbsp;</p>
<h3>2.3 查看结果</h3>
<p><span style="color: #3366ff;"><strong>　　1）查看HDFS上output目录内容 </strong></span></p>
<p>&nbsp;</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/xia520pi/201205/201205171119242107.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/201205171119253644.png" alt="image" width="845" height="141" border="0"></a></p>
<p>&nbsp;</p>
<p>　　从上图中知道生成了三个文件，我们的结果在"<span style="color: red;"><strong>part-r-00000</strong></span>"中。</p>
<p><span style="color: #3366ff;"><strong>　　2）查看结果输出文件内容 </strong></span></p>
<p>&nbsp;</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/xia520pi/201205/201205171119292102.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/201205171119316920.png" alt="image" width="609" height="130" border="0"></a></p>
<p>&nbsp;</p>
<h2>3、WordCount源码分析</h2>
<p style="text-align: justify;">&nbsp;</p>
<h3>3.1 特别数据类型介绍</h3>
<p>　　Hadoop提供了如下内容的数据类型，这些数据类型都实现了WritableComparable接口，以便用这些类型定义的数据可以被序列化进行网络传输和文件存储，以及进行大小比较。</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp; BooleanWritable：标准布尔型数值</p>
<p>&nbsp;&nbsp;&nbsp; ByteWritable：单字节数值</p>
<p>&nbsp;&nbsp;&nbsp; DoubleWritable：双字节数</p>
<p>&nbsp;&nbsp;&nbsp; FloatWritable：浮点数</p>
<p>&nbsp;&nbsp;&nbsp; IntWritable：整型数</p>
<p>&nbsp;&nbsp;&nbsp; LongWritable：长整型数</p>
<p>&nbsp;&nbsp;&nbsp; Text：使用UTF8格式存储的文本</p>
<p>&nbsp;&nbsp;&nbsp; NullWritable：当&lt;key,value&gt;中的key或value为空时使用</p>
<p style="text-align: justify;">&nbsp;</p>
<h3>3.2 旧的WordCount分析</h3>
<p><span style="color: #3366ff;"><strong>　　1）源代码程序 </strong></span></p>
<p>&nbsp;</p>
<blockquote>
<p>package org.apache.hadoop.examples;</p>
<p>import java.io.IOException;<br>import java.util.Iterator;<br>import java.util.StringTokenizer;</p>
<p>import org.apache.hadoop.fs.Path;<br>import org.apache.hadoop.io.IntWritable;<br>import org.apache.hadoop.io.LongWritable;<br>import org.apache.hadoop.io.Text;<br>import org.apache.hadoop.mapred.FileInputFormat;<br>import org.apache.hadoop.mapred.FileOutputFormat;<br>import org.apache.hadoop.mapred.JobClient;<br>import org.apache.hadoop.mapred.JobConf;<br>import org.apache.hadoop.mapred.MapReduceBase;<br>import org.apache.hadoop.mapred.Mapper;<br>import org.apache.hadoop.mapred.OutputCollector;<br>import org.apache.hadoop.mapred.Reducer;<br>import org.apache.hadoop.mapred.Reporter;<br>import org.apache.hadoop.mapred.TextInputFormat;<br>import org.apache.hadoop.mapred.TextOutputFormat;</p>
<p>public class WordCount {</p>
<p>&nbsp;&nbsp;&nbsp; public static class Map extends MapReduceBase implements<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mapper&lt;LongWritable, Text, Text, IntWritable&gt; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private final static IntWritable one = new IntWritable(1);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Text word = new Text();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void map(LongWritable key, Text value,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OutputCollector&lt;Text, IntWritable&gt; output, Reporter reporter)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throws IOException {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String line = value.toString();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StringTokenizer tokenizer = new StringTokenizer(line);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (tokenizer.hasMoreTokens()) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; word.set(tokenizer.nextToken());<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; output.collect(word, one);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp; public static class Reduce extends MapReduceBase implements<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Reducer&lt;Text, IntWritable, Text, IntWritable&gt; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void reduce(Text key, Iterator&lt;IntWritable&gt; values,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OutputCollector&lt;Text, IntWritable&gt; output, Reporter reporter)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throws IOException {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int sum = 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (values.hasNext()) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum += values.next().get();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; output.collect(key, new IntWritable(sum));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp; public static void main(String[] args) throws Exception {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; JobConf conf = new JobConf(WordCount.class);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conf.setJobName("wordcount");</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conf.setOutputKeyClass(Text.class);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conf.setOutputValueClass(IntWritable.class);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conf.setMapperClass(Map.class);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conf.setCombinerClass(Reduce.class);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conf.setReducerClass(Reduce.class);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conf.setInputFormat(TextInputFormat.class);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conf.setOutputFormat(TextOutputFormat.class);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileInputFormat.setInputPaths(conf, new Path(args[0]));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileOutputFormat.setOutputPath(conf, new Path(args[1]));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; JobClient.runJob(conf);<br>&nbsp;&nbsp;&nbsp; }<br>}</p>

</blockquote>
<p>&nbsp;</p>
<p><span style="color: #3366ff;"><strong>　　3）主方法<span style="color: red;">Main<span style="color: #3366ff;">分析 </span></span></strong></span></p>
<p>&nbsp;</p>
<blockquote>
<p>public static void main(String[] args) throws Exception {<br>&nbsp;&nbsp;&nbsp; JobConf conf = new JobConf(WordCount.class);<br>&nbsp;&nbsp;&nbsp; conf.setJobName("wordcount");</p>
<p>&nbsp;&nbsp;&nbsp; conf.setOutputKeyClass(Text.class);<br>&nbsp;&nbsp;&nbsp; conf.setOutputValueClass(IntWritable.class);</p>
<p>&nbsp;&nbsp;&nbsp; conf.setMapperClass(Map.class);<br>&nbsp;&nbsp;&nbsp; conf.setCombinerClass(Reduce.class);<br>&nbsp;&nbsp;&nbsp; conf.setReducerClass(Reduce.class);</p>
<p>&nbsp;&nbsp;&nbsp; conf.setInputFormat(TextInputFormat.class);<br>&nbsp;&nbsp;&nbsp; conf.setOutputFormat(TextOutputFormat.class);</p>
<p>&nbsp;&nbsp;&nbsp; FileInputFormat.setInputPaths(conf, new Path(args[0]));<br>&nbsp;&nbsp;&nbsp; FileOutputFormat.setOutputPath(conf, new Path(args[1]));</p>
<p>&nbsp;&nbsp;&nbsp; JobClient.runJob(conf);<br>}</p>

</blockquote>
<p>&nbsp;</p>
<p>　　首先讲解一下<span style="color: red;"><strong>Job</strong></span>的<span style="color: #ff6600;"><strong>初始化过程</strong></span>。<span style="color: red;"><strong>main</strong></span>函数调用<span style="color: red;"><strong>Jobconf</strong></span>类来对<span style="color: blue;"><strong>MapReduce Job</strong></span>进行初始化，然后调用<span style="color: red;"><strong>setJobName()</strong></span>方法命名这个<span style="color: red;"><strong>Job</strong></span>。对Job进行合理的命名有助于<span style="color: blue;"><strong>更快</strong></span>地找到Job，以便在JobTracker和Tasktracker的页面中对其进行<span style="color: blue;"><strong>监视</strong></span>。</p>
<p>&nbsp;</p>
<blockquote>
JobConf conf = new  JobConf(WordCount. class );   
conf.setJobName("wordcount" );
</blockquote>
<p>&nbsp;</p>
<p>　　接着设置Job输出结果&lt;key,value&gt;的中key和value数据类型，因为结果是&lt;单词,个数&gt;，所以key设置为"Text"类型，相当于Java中String类型。Value设置为"IntWritable"，相当于Java中的int类型。</p>
<p>&nbsp;</p>
<blockquote>
<p>conf.setOutputKeyClass(Text.class );</p>
<p>conf.setOutputValueClass(IntWritable.class );</p>

</blockquote>
<p>&nbsp;</p>
<p>　　然后设置Job处理的Map（拆分）、Combiner（中间结果合并）以及Reduce（合并）的相关处理类。这里用Reduce类来进行Map产生的中间结果合并，避免给网络数据传输产生压力。</p>
<p>&nbsp;</p>
<blockquote>
<p>conf.setMapperClass(Map.class );</p>
<p>conf.setCombinerClass(Reduce.class );</p>
<p>conf.setReducerClass(Reduce.class );</p>

</blockquote>
<p>&nbsp;</p>
<p>　　接着就是调用setInputPath()和setOutputPath()设置输入输出路径。</p>
<p>&nbsp;</p>
<blockquote>
<p>conf.setInputFormat(TextInputFormat.class );</p>
<p>conf.setOutputFormat(TextOutputFormat.class );</p>

</blockquote>
<p>&nbsp;</p>
<p><span style="color: #00ccff;"><strong>　　（1）InputFormat和InputSplit </strong></span></p>
<p>　　InputSplit是Hadoop定义的用来<span style="color: red;"><strong>传送</strong></span>给每个<span style="color: red;"><strong>单独</strong></span>的<span style="color: blue;"><strong>map</strong></span>的<span style="color: red;"><strong>数据</strong></span>，InputSplit<span style="color: red;"><strong>存储</strong></span>的并<span style="color: red;"><strong>非<span style="color: blue;">数据本身</span></strong>，</span>而是一个<span style="color: red;"><strong>分片长度</strong></span>和一个<span style="color: red;"><strong>记录数据位置</strong></span>的<span style="color: blue;"><strong>数组</strong></span>。<span style="color: #ff6600;"><strong>生成InputSplit的方法</strong></span>可以通过<span style="color: red;"><strong>InputFormat()</strong></span>来<span style="color: blue;"><strong>设置</strong></span>。</p>
<p>　　当数据传送给<span style="color: blue;"><strong>map</strong></span>时，map会将输入<span style="color: red;"><strong>分片</strong></span>传送到<span style="color: blue;"><strong>InputFormat</strong></span>，InputFormat则<span style="color: red;"><strong>调用</strong></span>方法<span style="color: blue;"><strong>getRecordReader()<span style="color: red;">生成<span style="color: blue;">RecordReader</span></span></strong>，</span>RecordReader再通过<span style="color: blue;"><strong>creatKey()</strong></span>、<span style="color: blue;"><strong>creatValue()</strong></span>方法<span style="color: red;"><strong>创建</strong></span>可供map处理的<span style="color: blue;"><strong>&lt;key,value&gt;</strong></span>对。简而言之，InputFormat()方法是用来生成可供map处理的&lt;key,value&gt;对的。</p>
<p>　　Hadoop预定义了多种方法将不同类型的输入数据转化为map能够处理的&lt;key,value&gt;对，它们都继承自InputFormat，分别是：</p>
<p>&nbsp;</p>
<blockquote>
<p>&nbsp;&nbsp;&nbsp; InputFormat</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |---BaileyBorweinPlouffe.BbpInputFormat</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |---ComposableInputFormat</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |---CompositeInputFormat</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |---DBInputFormat</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |---DistSum.Machine.AbstractInputFormat</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |---FileInputFormat</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |---CombineFileInputFormat</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |---KeyValueTextInputFormat</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |---NLineInputFormat</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |---SequenceFileInputFormat</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |---TeraInputFormat</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |---TextInputFormat</p>

</blockquote>
<p>&nbsp;</p>
<p>　　其中<span style="color: blue;"><strong>TextInputFormat</strong></span>是Hadoop<span style="color: red;"><strong>默认</strong></span>的输入方法，在TextInputFormat中，每个文件（或其一部分）都会单独地作为map的输入，而这个是继承自FileInputFormat的。之后，每行数据都会生成一条记录，每条记录则表示成&lt;key,value&gt;形式：</p>
<ul>
<li>
<div style="text-align: justify;">key值是每个数据的记录在<span style="color: red;"><strong>数据分片</strong></span>中<span style="color: blue;"><strong>字节偏移量</strong></span>，数据类型是<span style="color: #ff6600;"><strong>LongWritable</strong></span>；　　</div>

</li>

</ul>
<p style="text-align: justify;">value值是每行的内容，数据类型是<span style="color: #ff6600;"><strong>Text</strong></span>。</p>
<p><span style="color: #00ccff;"><strong>　　（2）OutputFormat </strong></span></p>
<p>　　每一种<span style="color: blue;"><strong>输<span style="color: red;">入<span style="color: blue;">格式</span></span></strong>都有一种<strong>输<span style="color: red;">出<span style="color: blue;">格式</span></span></strong>与其对应。默认的输出格式是<strong>TextOutputFormat</strong></span>，这种输出方式与输入类似，会将每条记录以一行的形式存入文本文件。不过，它的<span style="color: red;"><strong>键和值</strong></span>可以是<span style="color: red;"><strong>任意形式</strong></span>的，因为程序<span style="color: red;"><strong>内容</strong></span>会调用<span style="color: blue;"><strong>toString()</strong></span>方法将键和值转换为<span style="color: red;"><strong>String</strong></span>类型再输出。</p>
<p>&nbsp;</p>
<p><span style="color: #3366ff;"><strong>　　3）Map类中map方法分析 </strong></span></p>
<p>&nbsp;</p>
<blockquote>
<p>public static class Map extends MapReduceBase implements<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mapper&lt;LongWritable, Text, Text, IntWritable&gt; {<br>&nbsp;&nbsp;&nbsp; private final static IntWritable one = new IntWritable(1);<br>&nbsp;&nbsp;&nbsp; private Text word = new Text();</p>
<p>&nbsp;&nbsp;&nbsp; public void map(LongWritable key, Text value,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OutputCollector&lt;Text, IntWritable&gt; output, Reporter reporter)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throws IOException {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String line = value.toString();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StringTokenizer tokenizer = new StringTokenizer(line);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (tokenizer.hasMoreTokens()) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; word.set(tokenizer.nextToken());<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; output.collect(word, one);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; }<br>}</p>

</blockquote>
<pre>&nbsp;</pre>
<p><span style="color: red;"><strong>　　Map类</strong></span>继承自<span style="color: blue;"><strong>MapReduceBase</strong></span>，并且它实现了<span style="color: #ff6600;"><strong>Mapper接口</strong></span>，此接口是一个<span style="color: red;"><strong>规范类型</strong></span>，它有4种形式的参数，分别用来指定map的<span style="color: red;"><strong>输入</strong></span>key值类型、<span style="color: red;"><strong>输入</strong></span>value值类型、<span style="color: blue;"><strong>输出</strong></span>key值类型和<span style="color: blue;"><strong>输出</strong></span>value值类型。在本例中，因为使用的是TextInputFormat，它的输出key值是LongWritable类型，输出value值是Text类型，所以map的输入类型为&lt;LongWritable,Text&gt;。在本例中需要输出&lt;word,1&gt;这样的形式，因此输出的key值类型是Text，输出的value值类型是IntWritable。</p>
<p>　　实现此接口类还需要实现map方法，map方法会具体负责对输入进行操作，在本例中，map方法对输入的行以空格为单位进行切分，然后使用<span style="color: blue;"><strong>OutputCollect</strong></span>收集输出的&lt;word,1&gt;。</p>
<p>&nbsp;</p>
<p><span style="color: #3366ff;"><strong>　　4）Reduce类中reduce方法分析 </strong></span></p>
<p>&nbsp;</p>
<blockquote>
<p>public static class Reduce extends MapReduceBase implements<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Reducer&lt;Text, IntWritable, Text, IntWritable&gt; {<br>&nbsp;&nbsp;&nbsp; public void reduce(Text key, Iterator&lt;IntWritable&gt; values,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OutputCollector&lt;Text, IntWritable&gt; output, Reporter reporter)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throws IOException {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int sum = 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (values.hasNext()) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum += values.next().get();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; output.collect(key, new IntWritable(sum));<br>&nbsp;&nbsp;&nbsp; }<br>}</p>

</blockquote>
<pre>&nbsp;</pre>
<p><span style="color: red;"><strong>　　Reduce类</strong></span>也是继承自<span style="color: blue;"><strong>MapReduceBase</strong></span>的，需要实现Reducer接口。Reduce类以map的输出作为输入，因此Reduce的输入类型是&lt;Text，Intwritable&gt;。而Reduce的输出是<span style="color: red;"><strong>单词</strong></span>和<span style="color: red;"><strong>它的数目</strong></span>，因此，它的输出类型是&lt;Text,IntWritable&gt;。Reduce类也要实现reduce方法，在此方法中，reduce函数将输入的key值作为输出的key值，然后将获得多个value值加起来，作为输出的值。</p>
<p style="text-align: justify;">&nbsp;</p>
<h3>3.3 新的WordCount分析</h3>
<p><span style="color: #3366ff;"><strong>　　1）源代码程序 </strong></span></p>
<p>&nbsp;</p>
<blockquote>
<p>package org.apache.hadoop.examples;</p>
<p>import java.io.IOException;</p>
<p>import java.util.StringTokenizer;</p>
<p>import org.apache.hadoop.conf.Configuration;</p>
<p>import org.apache.hadoop.fs.Path;</p>
<p>import org.apache.hadoop.io.IntWritable;</p>
<p>import org.apache.hadoop.io.Text;</p>
<p>import org.apache.hadoop.mapreduce.Job;</p>
<p>import org.apache.hadoop.mapreduce.Mapper;</p>
<p>import org.apache.hadoop.mapreduce.Reducer;</p>
<p>import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</p>
<p>import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</p>
<p>import org.apache.hadoop.util.GenericOptionsParser;</p>
<p>public class WordCount {</p>
<p>　　public static class <strong>TokenizerMapper</strong></p>
<p>　　　　　　extends Mapper&lt;Object, Text, Text, IntWritable&gt;{</p>
<p>　　　　　　private final static IntWritable one = new IntWritable(1);</p>
<p>　　　　　　private Text word = new Text();</p>
<p>&nbsp;</p>
<p>　　　　　　public void map(Object key, Text value, Context context)</p>
<p>　　　　　　　　throws IOException, InterruptedException {</p>
<p>　　　　　　　　StringTokenizer itr = new StringTokenizer(value.toString());</p>
<p>　　　　　　　　while (itr.hasMoreTokens()) {</p>
<p>　　　　　　　　word.set(itr.nextToken());</p>
<p>　　　　　　　　context.write(word, one);</p>
<p>　　　　　　}</p>
<p>　　　　}</p>
<p>　　}</p>
<p>　　public static class <strong>IntSumReducer</strong></p>
<p>　　　　　　extends Reducer&lt;Text,IntWritable,Text,IntWritable&gt; {</p>
<p>　　　　　　private IntWritable result = new IntWritable();</p>
<p>　　　　　　public void reduce(Text key, Iterable&lt;IntWritable&gt; values,Context context)</p>
<p>　　　　　　　　　　 throws IOException, InterruptedException {</p>
<p>　　　　　　　　int sum = 0;</p>
<p>　　　　　　　　for (IntWritable val : values) {</p>
<p>　　　　　　　　　　　sum += val.get();</p>
<p>　　　　　　　　}</p>
<p>　　　　　　result.set(sum);</p>
<p>　　　　　　context.write(key, result);</p>
<p>　　　　}</p>
<p>　　}</p>
<p>&nbsp;</p>
<p>　　public static void <strong>main</strong>(String[] args) throws Exception {</p>
<p>　　　　Configuration conf = new Configuration();</p>
<p>　　　　String[] otherArgs = new GenericOptionsParser(conf, args).getRemainingArgs();</p>
<p>　　　　if (otherArgs.length != 2) {</p>
<p>　　　　　　System.err.println("Usage: wordcount &lt;in&gt; &lt;out&gt;");</p>
<p>　　　　　　System.exit(2);</p>
<p>　　　　}</p>
<p>　　　　Job job = new Job(conf, "word count");</p>
<p>　　　　job.setJarByClass(WordCount.class);</p>
<p>　　　　job.setMapperClass(TokenizerMapper.class);</p>
<p>　　　　job.setCombinerClass(IntSumReducer.class);</p>
<p>　　　　job.setReducerClass(IntSumReducer.class);</p>
<p>　　　　job.setOutputKeyClass(Text.class);</p>
<p>　　　　job.setOutputValueClass(IntWritable.class);</p>
<p>　　　　FileInputFormat.addInputPath(job, new Path(otherArgs[0]));</p>
<p>　　　　FileOutputFormat.setOutputPath(job, new Path(otherArgs[1]));</p>
<p>　　　　System.exit(job.waitForCompletion(true) ? 0 : 1);</p>
<p>}</p>
<p>}</p>
</blockquote>
<p>&nbsp;</p>
<p>&nbsp;<span style="color: #3366ff;"><strong>　 1）Map过程 </strong></span></p>
<p>&nbsp;</p>
<blockquote>
<p>public static class <strong>TokenizerMapper</strong></p>
<p>　　extends Mapper&lt;Object, Text, Text, IntWritable&gt;{</p>
<p>　　private final static IntWritable one = new IntWritable(1);</p>
<p>　　private Text word = new Text();</p>
<p>　　public void map(Object key, Text value, Context context)</p>
<p>　　　　throws IOException, InterruptedException {</p>
<p>　　　　StringTokenizer itr = new StringTokenizer(value.toString());</p>
<p>　　　　while (itr.hasMoreTokens()) {</p>
<p>　　　　　　word.set(itr.nextToken());</p>
<p>　　　　　　context.write(word, one);</p>
<p>　　}</p>
<p>}</p>
</blockquote>
<p>&nbsp;</p>
<p>　　Map过程需要继承org.apache.hadoop.mapreduce包中<span style="color: red;"><strong>Mapper</strong></span>类，并<span style="color: blue;"><strong>重写</strong></span>其map方法。通过在map方法中添加两句把key值和value值输出到控制台的代码，可以发现map方法中value值存储的是文本文件中的一行（以回车符为行结束标记），而key值为该行的首字母相对于文本文件的首地址的偏移量。然后StringTokenizer类将每一行拆分成为一个个的单词，并将&lt;word,1&gt;作为map方法的结果输出，其余的工作都交有<span style="color: blue;"><strong>MapReduce框架</strong></span>处理。</p>
<p>&nbsp;</p>
<p>&nbsp; <span style="color: #3366ff;"><strong>2）Reduce过程 </strong></span></p>
<p>&nbsp;</p>
<blockquote>
<p>public static class <strong>IntSumReducer</strong></p>
<p>　　extends Reducer&lt;Text,IntWritable,Text,IntWritable&gt; {</p>
<p>　　private IntWritable result = new IntWritable();</p>
<p>　　public void reduce(Text key, Iterable&lt;IntWritable&gt; values,Context context)</p>
<p>　　　　 throws IOException, InterruptedException {</p>
<p>　　　　int sum = 0;</p>
<p>　　　　for (IntWritable val : values) {</p>
<p>　　　　　　sum += val.get();</p>
<p>　　　　}</p>
<p>　　　　result.set(sum);</p>
<p>　　　　context.write(key, result);</p>
<p>　　}</p>
<p>}</p>
</blockquote>
<pre>&nbsp;</pre>
<p>　　Reduce过程需要继承org.apache.hadoop.mapreduce包中<span style="color: red;"><strong>Reducer</strong></span>类，并<span style="color: blue;"><strong>重写</strong></span>其reduce方法。Map过程输出&lt;key,values&gt;中key为单个单词，而values是对应单词的计数值所组成的列表，Map的输出就是Reduce的输入，所以reduce方法只要遍历values并求和，即可得到某个单词的总次数。</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp; <span style="color: #3366ff;"><strong>3）执行MapReduce任务 </strong></span></p>
<p>&nbsp;</p>
<blockquote>
<p>public static void <strong>main</strong>(String[] args) throws Exception {</p>
<p>　　Configuration conf = new Configuration();</p>
<p>　　String[] otherArgs = new GenericOptionsParser(conf, args).getRemainingArgs();</p>
<p>　　if (otherArgs.length != 2) {</p>
<p>　　　　System.err.println("Usage: wordcount &lt;in&gt; &lt;out&gt;");</p>
<p>　　　　System.exit(2);</p>
<p>　　}</p>
<p>　　Job job = new Job(conf, "word count");</p>
<p>　　job.setJarByClass(WordCount.class);</p>
<p>　　job.setMapperClass(TokenizerMapper.class);</p>
<p>　　job.setCombinerClass(IntSumReducer.class);</p>
<p>　　job.setReducerClass(IntSumReducer.class);</p>
<p>　　job.setOutputKeyClass(Text.class);</p>
<p>　　job.setOutputValueClass(IntWritable.class);</p>
<p>　　FileInputFormat.addInputPath(job, new Path(otherArgs[0]));</p>
<p>　　FileOutputFormat.setOutputPath(job, new Path(otherArgs[1]));</p>
<p>　　System.exit(job.waitForCompletion(true) ? 0 : 1);</p>
<p>}</p>
</blockquote>
<pre>&nbsp;</pre>
<p>　　在MapReduce中，由Job对象负责管理和运行一个计算任务，并通过Job的一些方法对任务的参数进行相关的设置。此处设置了使用TokenizerMapper完成Map过程中的处理和使用IntSumReducer完成Combine和Reduce过程中的处理。还设置了Map过程和Reduce过程的输出类型：key的类型为Text，value的类型为IntWritable。任务的输出和输入<span style="color: red;"><strong>路径</strong></span>则由命令行参数指定，并由FileInputFormat和FileOutputFormat分别设定。完成相应任务的参数设定后，即可调用<span style="color: #ff6600;"><strong>job.waitForCompletion()</strong></span>方法执行任务。</p>
<p style="text-align: justify;">&nbsp;</p>
<h2>4、WordCount处理过程</h2>
<p>　　本节将对WordCount进行更详细的讲解。详细执行步骤如下：</p>
<p>&nbsp;</p>
<p>　　1）将文件拆分成splits，由于测试用的文件较小，所以每个文件为一个split，并将文件按行分割形成&lt;key,value&gt;对，如图4-1所示。这一步由MapReduce框架自动完成，其中偏移量（即key值）包括了回车所占的字符数（Windows和Linux环境会不同）。</p>
<p>&nbsp;</p>
<p style="text-align: center;">&nbsp;<a href="http://images.cnblogs.com/cnblogs_com/xia520pi/201205/201205161651549641.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/201205161651553686.png" alt="image" width="470" height="235" border="0"></a></p>
<p style="text-align: center;">图4-1 分割过程</p>
<p>&nbsp;</p>
<p>　　2）将分割好的&lt;key,value&gt;对交给用户定义的map方法进行处理，生成新的&lt;key,value&gt;对，如图4-2所示。</p>
<p>&nbsp;</p>
<p style="text-align: center;">&nbsp;<a href="http://images.cnblogs.com/cnblogs_com/xia520pi/201205/2012051616515532.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/201205161651566029.png" alt="image" width="466" height="277" border="0"></a></p>
<p style="text-align: center;">图4-2 执行map方法</p>
<p>&nbsp;</p>
<p>　　3）得到map方法输出的&lt;key,value&gt;对后，Mapper会将它们按照key值进行排序，并执行Combine过程，将key至相同value值累加，得到Mapper的最终输出结果。如图4-3所示。</p>
<p>&nbsp;</p>
<p style="text-align: center;">&nbsp;<a href="http://images.cnblogs.com/cnblogs_com/xia520pi/201205/201205161651583846.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/201205161652006156.png" alt="image" width="620" height="281" border="0"></a></p>
<p style="text-align: center;">图4-3 Map端排序及Combine过程</p>
<p>&nbsp;</p>
<p>　　4）Reducer先对从Mapper接收的数据进行排序，再交由用户自定义的reduce方法进行处理，得到新的&lt;key,value&gt;对，并作为WordCount的输出结果，如图4-4所示。</p>
<p>&nbsp;</p>
<p style="text-align: center;">&nbsp;<a href="http://images.cnblogs.com/cnblogs_com/xia520pi/201205/201205161652016057.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/201205161652036731.png" alt="image" width="622" height="257" border="0"></a></p>
<p style="text-align: center;">图4-4 Reduce端排序及输出结果</p>
<p style="text-align: justify;">&nbsp;</p>
<h2>5、MapReduce新旧改变</h2>
<p>　　Hadoop最新版本的MapReduce Release 0.20.0的API包括了一个全新的Mapreduce JAVA API，有时候也称为上下文对象。</p>
<p>　　新的API类型上不兼容以前的API，所以，以前的应用程序需要重写才能使新的API发挥其作用 。</p>
<p>　　新的API和旧的API之间有下面几个明显的区别。</p>
<ul>
<li>
<div style="text-align: justify;">新的API倾向于使用抽象类，而不是接口，因为这更容易扩展。例如，你可以添加一个方法(用默认的实现)到一个抽象类而不需修改类之前的实现方法。在新的API中，Mapper和Reducer是抽象类。</div>
</li>
<li>
<div style="text-align: justify;">新的API是在org.apache.hadoop.mapreduce包(和子包)中的。之前版本的API则是放在org.apache.hadoop.mapred中的。</div>
</li>
<li>
<div style="text-align: justify;">新的API广泛使用context object(上下文对象)，并允许用户代码与MapReduce系统进行通信。例如，MapContext基本上充当着JobConf的OutputCollector和Reporter的角色。</div>
</li>
<li>
<div style="text-align: justify;">新的API同时支持"推"和"拉"式的迭代。在这两个新老API中，键/值记录对被推mapper中，但除此之外，新的API允许把记录从map()方法中拉出，这也适用于reducer。"拉"式的一个有用的例子是分批处理记录，而不是一个接一个。</div>
</li>
<li>
<div style="text-align: justify;">新的API统一了配置。旧的API有一个特殊的JobConf对象用于作业配置，这是一个对于Hadoop通常的Configuration对象的扩展。在新的API中，这种区别没有了，所以作业配置通过Configuration来完成。作业控制的执行由Job类来负责，而不是JobClient，它在新的API中已经荡然无存。</div>
<p>&nbsp;</p>
<p>　　文章<span style="color: #ff0000;">下载</span>地址：<a href="http://files.cnblogs.com/xia520pi/HadoopCluster_Vol.6.rar">http://files.cnblogs.com/xia520pi/HadoopCluster_Vol.6.rar</a></p>
</li>
</ul></div><div id="MySignature" style="display: block;"><div class="note">
  <p>
  如果，您认为阅读这篇博客让您有些收获，不妨点击一下右下角的【<b class="nb">推荐</b>】。<br>
  如果，您希望更容易地发现我的新博客，不妨点击一下左下角的【<b class="nb">关注我</b>】。<br>
  如果，您对我的博客所讲述的内容有兴趣，请继续关注我的后续博客，我是【<a href="http://www.cnblogs.com/xia520pi/" target="_blank"><b class="nb">虾皮★csAxp</b></a>】。</p>
  <p>本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接，否则保留追究法律责任的权利。</p>
</div></div>
<div class="clear"></div>
<div id="blog_post_info_block">
<div id="BlogPostCategory">分类: <a href="http://www.cnblogs.com/xia520pi/category/346943.html">细细品味Hadoop</a></div>
<div id="EntryTag"></div>
<div id="blog_post_info"><div id="green_channel">
<a href="javascript:void(0);" id="green_channel_digg" onclick="DiggIt(2504205,cb_blogId,1);green_channel_success(this,&#39;谢谢推荐！&#39;);">好文要顶</a>
<a id="green_channel_follow" onclick="c_follow();" href="javascript:void(0);">关注我</a>
<a id="green_channel_favorite" onclick="AddToWz(cb_entryId);return false;" href="javascript:void(0);">收藏该文</a><a id="green_channel_contact" href="http://msg.cnblogs.com/send/%E8%99%BE%E7%9A%AE" target="_blank">联系我</a>
<a id="green_channel_weibo" href="javascript:void(0);" title="分享至新浪微博" onclick="ShareToTsina()"><img src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/icon_weibo_24.png" alt=""></a>
<a id="green_channel_wechat" href="javascript:void(0);" title="分享至微信" onclick="shareOnWechat()"><img src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/wechat.png" alt=""></a>
</div>
<div id="author_profile">
<div id="author_profile_info" class="author_profile_info">
<a href="http://home.cnblogs.com/u/xia520pi/" target="_blank"><img src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/u202708.png" class="author_avatar" alt=""></a>
<div id="author_profile_detail" class="author_profile_info">
<a href="http://home.cnblogs.com/u/xia520pi/">虾皮</a><br>
<a href="http://home.cnblogs.com/u/xia520pi/followees">关注 - 2</a><br>
<a href="http://home.cnblogs.com/u/xia520pi/followers">粉丝 - 1696</a>
</div>
</div>
<div class="clear"></div>
<div id="author_profile_honor">荣誉：<a href="http://www.cnblogs.com/expert/" target="_blank">推荐博客</a></div>
<div id="author_profile_follow">
    <a href="javascript:void(0);" onclick="c_follow();return false;">+加关注</a>
</div>
</div>
<div id="div_digg">										
    <div class="diggit" onclick="votePost(2504205,&#39;Digg&#39;)">
        <span class="diggnum" id="digg_count">68</span>
    </div>
	<div class="buryit" onclick="votePost(2504205,&#39;Bury&#39;)"> 
		<span class="burynum" id="bury_count">0</span>
	</div>
	<div class="clear"></div>	
	<div class="diggword" id="digg_tips">
    (请您对文章做出评价)
    </div>	
</div>
</div>
<div class="clear"></div>
<div id="post_next_prev"><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504132.html" class="p_n_p_prefix">« </a> 上一篇：<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504132.html" title="发布于2012-05-16 15:54">Hadoop集群（第5期副刊）_JDK和SSH无密码配置</a><br><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/20/2510723.html" class="p_n_p_prefix">» </a> 下一篇：<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/20/2510723.html" title="发布于2012-05-20 19:09">Hadoop集群（第7期）_Eclipse开发环境设置</a><br></div>
</div>


		</div>
		<div class="postDesc">posted @ <span id="post-date">2012-05-16 16:20</span> <a href="http://www.cnblogs.com/xia520pi/">虾皮</a> 阅读(<span id="post_view_count">92856</span>) 评论(<span id="post_comment_count">38</span>)  <a href="http://i.cnblogs.com/EditPosts.aspx?postid=2504205" rel="nofollow">编辑</a> <a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#" onclick="AddToWz(2504205);return false;">收藏</a></div>
	</div>
	<script type="text/javascript">var allowComments=true,isLogined=false,cb_blogId=98534,cb_entryId=2504205,cb_blogApp=currentBlogApp,cb_blogUserGuid='aff597ab-3df2-df11-ac81-842b2b196315',cb_entryCreatedDate='2012/5/16 16:20:00';loadViewCount(cb_entryId);</script>
	
</div><!--end: topics 文章、评论容器-->
</div><a name="!comments"></a><div id="blog-comments-placeholder"><div id="comments_pager_top"></div>
<!--done-->
<div class="feedback_area_title">评论列表</div>
<div class="feedbackNoItems"></div>
	

		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2407649" class="layer">#1楼</a><a name="2407649" id="comment_anchor_2407649"></a>  <span class="comment_date">2012-06-25 17:34</span> <a id="a_comment_author_2407649" href="http://home.cnblogs.com/u/421606/" target="_blank">shawnx</a> <a href="http://msg.cnblogs.com/send/shawnx" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2407649" class="blog_comment_body">Map类继承自MapReduceBase，并且它实现了Mapper接口，此接口是一个规范类型，它有4种形式的参数，分别用来指定map的输入key值类型、输入value值类型、输出key值类型和输出value值类型。在本例中，因为使用的是TextInputFormat，它的输出key值是LongWritable类型，输出value值是Text类型，所以map的输入类型为&lt;LongWritable,Text&gt;。在本例中需要输出&lt;word,1&gt;这样的形式，因此输出的key值类型是Text，输出的value值类型是IntWritable。 <br>　　实现此接口类还需要实现map方法，map方法会具体负责对输入进行操作，在本例中，map方法对输入的行以空格为单位进行切分，然后使用OutputCollect收集输出的&lt;word,1&gt;。 <br>  <br>  <br>问： <br>Map的形参写成 &lt;longwritable intwritable="" text,="" ,=""&gt;    不懂这样写是什么意思  小白一个 求指点<br>还有longwritable和Longwritable是不是不一样</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2407649,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2407649,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2408464" class="layer">#2楼</a><a name="2408464" id="comment_anchor_2408464"></a>[<span class="louzhu">楼主</span>]  <span class="comment_date">2012-06-26 16:21</span> <a id="a_comment_author_2408464" href="http://www.cnblogs.com/xia520pi/" target="_blank">虾皮</a> <a href="http://msg.cnblogs.com/send/%E8%99%BE%E7%9A%AE" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2408464" class="blog_comment_body"><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2407649" title="查看所回复的评论" onclick="commentManager.renderComments(0,50,2407649);">@</a>shawnx<br>出现上面的问题是我当时加的代码高亮出现问题，代码不是这样的。现在我去掉了代码高亮。</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2408464,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2408464,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2408464_avatar" style="display:none;">http://pic.cnblogs.com/face/u202708.png?id=05165218</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2408696" class="layer">#3楼</a><a name="2408696" id="comment_anchor_2408696"></a>  <span class="comment_date">2012-06-26 21:48</span> <a id="a_comment_author_2408696" href="http://home.cnblogs.com/u/421606/" target="_blank">shawnx</a> <a href="http://msg.cnblogs.com/send/shawnx" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2408696" class="blog_comment_body">public void map(Object key, Text value, Context context)<br>请问这句中key为什么是Object类型的？</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2408696,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2408696,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2454001" class="layer">#4楼</a><a name="2454001" id="comment_anchor_2454001"></a>  <span class="comment_date">2012-08-22 16:33</span> <a id="a_comment_author_2454001" href="http://home.cnblogs.com/u/440087/" target="_blank">Axel.xu</a> <a href="http://msg.cnblogs.com/send/Axel.xu" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2454001" class="blog_comment_body">请问在输入map端分割时形成的 key/value 是由map的输入key值类型决定的吗?比如file1是 &lt;0,hello world&gt;，&lt;12,bye world&gt;，而不是&lt;0,hello world bye world&gt;。</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2454001,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2454001,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2454623" class="layer">#5楼</a><a name="2454623" id="comment_anchor_2454623"></a>[<span class="louzhu">楼主</span>]  <span class="comment_date">2012-08-23 10:42</span> <a id="a_comment_author_2454623" href="http://www.cnblogs.com/xia520pi/" target="_blank">虾皮</a> <a href="http://msg.cnblogs.com/send/%E8%99%BE%E7%9A%AE" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2454623" class="blog_comment_body"><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2454001" title="查看所回复的评论" onclick="commentManager.renderComments(0,50,2454001);">@</a>Axel.xu<br>初始的Key是有MAP决定，是按照前面行的字符个数决定的。</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2454623,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2454623,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2454623_avatar" style="display:none;">http://pic.cnblogs.com/face/u202708.png?id=05165218</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2454900" class="layer">#6楼</a><a name="2454900" id="comment_anchor_2454900"></a>  <span class="comment_date">2012-08-23 15:57</span> <a id="a_comment_author_2454900" href="http://home.cnblogs.com/u/440087/" target="_blank">Axel.xu</a> <a href="http://msg.cnblogs.com/send/Axel.xu" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2454900" class="blog_comment_body"><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2454623" title="查看所回复的评论" onclick="commentManager.renderComments(0,50,2454623);">@</a>虾皮<br>感谢你的解释，这样就明白多了。</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2454900,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2454900,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2517568" class="layer">#7楼</a><a name="2517568" id="comment_anchor_2517568"></a>  <span class="comment_date">2012-10-27 17:16</span> <a id="a_comment_author_2517568" href="http://home.cnblogs.com/u/461328/" target="_blank">云中隐者</a> <a href="http://msg.cnblogs.com/send/%E4%BA%91%E4%B8%AD%E9%9A%90%E8%80%85" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2517568" class="blog_comment_body">你好：为什么我的运行到<br>hadoop@master/hadoop-0.21.0$ hadoop jar hadoop-mapred-examples-0.21.0.jar wordcount input output<br>11/03/31 14:11:45 INFO security.Groups: Group mapping impl=org.apache.hadoop.security.ShellBasedUnixGroupsMapping; cacheTimeout=300000<br>这里之后就不动了，这是什么原因呢？</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2517568,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2517568,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2598051" class="layer">#8楼</a><a name="2598051" id="comment_anchor_2598051"></a>  <span class="comment_date">2013-01-11 14:55</span> <a id="a_comment_author_2598051" href="http://home.cnblogs.com/u/193464/" target="_blank">zzge163</a> <a href="http://msg.cnblogs.com/send/zzge163" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2598051" class="blog_comment_body">很喜欢这种简洁的网页风格</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2598051,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2598051,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2669579" class="layer">#9楼</a><a name="2669579" id="comment_anchor_2669579"></a>  <span class="comment_date">2013-04-29 21:24</span> <a id="a_comment_author_2669579" href="http://www.cnblogs.com/lgfeng/" target="_blank">haifeng0730</a> <a href="http://msg.cnblogs.com/send/haifeng0730" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2669579" class="blog_comment_body">文章写得很好，获益良多。。。</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2669579,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2669579,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2701480" class="layer">#10楼</a><a name="2701480" id="comment_anchor_2701480"></a>  <span class="comment_date">2013-06-09 08:45</span> <a id="a_comment_author_2701480" href="http://www.cnblogs.com/zhouzhaokun/" target="_blank">西安-DB</a> <a href="http://msg.cnblogs.com/send/%E8%A5%BF%E5%AE%89-DB" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2701480" class="blog_comment_body">mkdir: org.apache.hadoop.security.AccessControlException: Permission denied: user=hadoop, access=WRITE, inode="":root:supergroup:rwxr-xr-x<br><br>提示我 hadoop 账户权限不足，请问这个需要什么权限？</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2701480,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2701480,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2701480_avatar" style="display:none;">http://pic.cnblogs.com/face/u39809.jpg</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2704920" class="layer">#11楼</a><a name="2704920" id="comment_anchor_2704920"></a>  <span class="comment_date">2013-06-14 15:34</span> <a id="a_comment_author_2704920" href="http://www.cnblogs.com/ever4ever/" target="_blank">嗷桑</a> <a href="http://msg.cnblogs.com/send/%E5%97%B7%E6%A1%91" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2704920" class="blog_comment_body">成功了，谢谢楼主！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2704920,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2704920,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2704920_avatar" style="display:none;">http://pic.cnblogs.com/face/319135/20141227120110.png</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2725675" class="layer">#12楼</a><a name="2725675" id="comment_anchor_2725675"></a>  <span class="comment_date">2013-07-12 11:03</span> <a id="a_comment_author_2725675" href="http://home.cnblogs.com/u/547291/" target="_blank">季末小写</a> <a href="http://msg.cnblogs.com/send/%E5%AD%A3%E6%9C%AB%E5%B0%8F%E5%86%99" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2725675" class="blog_comment_body">讲解的很详细，受益匪浅，谢谢</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2725675,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2725675,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2730616" class="layer">#13楼</a><a name="2730616" id="comment_anchor_2730616"></a>  <span class="comment_date">2013-07-19 10:30</span> <a id="a_comment_author_2730616" href="http://www.cnblogs.com/kiato-kid/" target="_blank">阳光单车</a> <a href="http://msg.cnblogs.com/send/%E9%98%B3%E5%85%89%E5%8D%95%E8%BD%A6" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2730616" class="blog_comment_body">一直没好好弄，这几天弄了下，成功了。好有成就感</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2730616,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2730616,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2730616_avatar" style="display:none;">http://pic.cnblogs.com/face/507145/20130320191050.png</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2745053" class="layer">#14楼</a><a name="2745053" id="comment_anchor_2745053"></a>  <span class="comment_date">2013-08-07 11:12</span> <a id="a_comment_author_2745053" href="http://home.cnblogs.com/u/555533/" target="_blank">菠萝小妹</a> <a href="http://msg.cnblogs.com/send/%E8%8F%A0%E8%90%9D%E5%B0%8F%E5%A6%B9" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2745053" class="blog_comment_body">我运行了、到最后一步的时候：<br>map 0% reduce 0% <br>counters ：0<br><br>我这是哪里出问题了 求您解答一下吧 我要崩溃了</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2745053,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2745053,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2751373" class="layer">#15楼</a><a name="2751373" id="comment_anchor_2751373"></a>  <span class="comment_date">2013-08-14 17:48</span> <a id="a_comment_author_2751373" href="http://home.cnblogs.com/u/557910/" target="_blank">cgl2014</a> <a href="http://msg.cnblogs.com/send/cgl2014" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2751373" class="blog_comment_body">"map函数接收一个&lt;key,value&gt;形式的输入，然后同样产生一个&lt;key,value&gt;形式的中间输出，Hadoop函数接收一个如&lt;key,(list of values)&gt;形式的输入，然后对这个value集合进行处理，每个reduce产生0或1个输出，reduce的输出也是&lt;key,value&gt;形式的。"<br>"Hadoop函数"，这个是笔误吧，是不是"reduce函数"呢？</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2751373,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2751373,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2751375" class="layer">#16楼</a><a name="2751375" id="comment_anchor_2751375"></a>  <span class="comment_date">2013-08-14 17:51</span> <a id="a_comment_author_2751375" href="http://home.cnblogs.com/u/557910/" target="_blank">cgl2014</a> <a href="http://msg.cnblogs.com/send/cgl2014" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2751375" class="blog_comment_body">这个感觉说不通：<br>"map函数接收一个&lt;key,value&gt;形式的输入，然后同样产生一个&lt;key,value&gt;形式的中间输出，Hadoop函数接收一个如&lt;key,(list of values)&gt;形式的输入，然后对这个value集合进行处理，每个reduce产生0或1个输出，reduce的输出也是&lt;key,value&gt;形式的。"<br><br>下面这个才说的通：<br>“map函数接受一个&lt;key,value&gt;形式的输入，然后同样产生一个&lt;key,value&gt;形式的中间输出，Hadoop会负责将所有具有相同结果中间key值的value集合到一起传给reduce函数，reduce函数接受一个如&lt;key,(list of value)&gt;形式的输入，然后对这个value集合进行处理，每个reduce产生0或1个输出，reduce的输出也是&lt;key,value&gt;形式。”<br>---from:<a href="http://hi.baidu.com/sunny_atao/item/8baab1296d6095969c63d183" target="_blank">http://hi.baidu.com/sunny_atao/item/8baab1296d6095969c63d183</a></div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2751375,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2751375,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2762765" class="layer">#17楼</a><a name="2762765" id="comment_anchor_2762765"></a>  <span class="comment_date">2013-08-28 16:58</span> <a id="a_comment_author_2762765" href="http://home.cnblogs.com/u/562342/" target="_blank">ustcxcl</a> <a href="http://msg.cnblogs.com/send/ustcxcl" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2762765" class="blog_comment_body">你好，首先感谢你分享给大家这么详细的资料，让我受益匪浅，<br>我现在碰到一个问题，想向你请教一下，谢谢<br>我主要是按照你上述方法进行执行wordcout 例子，第一次执行时成功的，但第二次执行就报错了，<br>在Master上执行hadoop jar /usr/hadoop  ....input  output 命令，报如下错误：<br>WARN hdfs.DFSClient: DFSOutputStream ResponseProcessor exception  for block blk_711377119599541524_1030java.io.IOException: Connection timed out<br>        at sun.nio.ch.FileDispatcher.read0(Native Method)<br>        at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:21)<br>        at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:198)<br>        at sun.nio.ch.IOUtil.read(IOUtil.java:171)<br>        at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:243)<br>        at org.apache.hadoop.net.SocketInputStream$Reader.performIO(SocketInputStream.java:55)<br>        at org.apache.hadoop.net.SocketIOWithTimeout.doIO(SocketIOWithTimeout.java:142)<br>        at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:155)<br>        at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:128)<br>        at java.io.DataInputStream.readFully(DataInputStream.java:178)<br>        at java.io.DataInputStream.readLong(DataInputStream.java:399)<br>        at org.apache.hadoop.hdfs.protocol.DataTransferProtocol$PipelineAck.readFields(DataTransferProtocol.java:124)<br>        at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream$ResponseProcessor.run(DFSClient.java:2964)<br><br>13/08/28 14:20:08 WARN hdfs.DFSClient: Error Recovery for block blk_711377119599541524_1030 bad datanode[0] 192.168.0.221:50010<br>13/08/28 14:20:08 INFO mapred.JobClient: Cleaning up the staging area hdfs://192.168.0.214:9000/usr/hadoop/tmp/hadoop-xcl1/mapred/staging/xcl1/.staging/job_201308281351_0001<br>13/08/28 14:20:08 ERROR security.UserGroupInformation: PriviledgedActionException as:xcl1 cause:java.io.IOException: All datanodes 192.168.0.221:50010 are bad. Aborting...<br>java.io.IOException: All datanodes 192.168.0.221:50010 are bad. Aborting...<br>        at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.processDatanodeError(DFSClient.java:3093)<br>        at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.access$2200(DFSClient.java:2586)<br>        at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream$DataStreamer.run(DFSClient.java:2790)<br>13/08/28 14:20:08 ERROR hdfs.DFSClient: Exception closing file /usr/hadoop/tmp/hadoop-xcl1/mapred/staging/xcl1/.staging/job_201308281351_0001/job.jar : java.io.IOException: All datanodes 192.168.0.221:50010 are bad. Aborting...<br>java.io.IOException: All datanodes 192.168.0.221:50010 are bad. Aborting...<br><br><br>在datanode 的日志中出现如下错误：<br>2013-08-28 15:20:07,817 ERROR org.apache.hadoop.hdfs.server.datanode.DataNode: DatanodeRegistration(192.168.0.221:50010, storage<br>ID=DS-675500061-192.168.0.221-50010-1377054201244, infoPort=50075, ipcPort=50020):DataXceiver<br>java.io.IOException: Interrupted receiveBlock<br>        at org.apache.hadoop.hdfs.server.datanode.BlockReceiver.receiveBlock(BlockReceiver.java:577)<br>        at org.apache.hadoop.hdfs.server.datanode.DataXceiver.writeBlock(DataXceiver.java:398)<br>        at org.apache.hadoop.hdfs.server.datanode.DataXceiver.run(DataXceiver.java:107)<br>        at java.lang.Thread.run(Thread.java:662)<br>2013-08-28 15:20:07,822 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: oldblock=blk_711377119599541524_1030(length=130048<br>), newblock=blk_711377119599541524_1031(length=130048), datanode=192.168.0.221:50010<br>2013-08-28 15:20:07,823 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: Received block blk_711377119599541524_1031 of size<br> 130048 as part of lease recovery.<br><br>求你指教一下，非常感激！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2762765,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2762765,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2788747" class="layer">#18楼</a><a name="2788747" id="comment_anchor_2788747"></a>  <span class="comment_date">2013-10-09 10:44</span> <a id="a_comment_author_2788747" href="http://www.cnblogs.com/lifegoesonitself/" target="_blank">无脚的鸟</a> <a href="http://msg.cnblogs.com/send/%E6%97%A0%E8%84%9A%E7%9A%84%E9%B8%9F" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2788747" class="blog_comment_body">按照博主所示步骤 果然运行对了wordcount。<br>谢谢楼主~ 感恩~</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2788747,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2788747,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2816082" class="layer">#19楼</a><a name="2816082" id="comment_anchor_2816082"></a>  <span class="comment_date">2013-11-13 22:59</span> <a id="a_comment_author_2816082" href="http://www.cnblogs.com/mrchenhao/" target="_blank">我要当个厉害的程序员</a> <a href="http://msg.cnblogs.com/send/%E6%88%91%E8%A6%81%E5%BD%93%E4%B8%AA%E5%8E%89%E5%AE%B3%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2816082" class="blog_comment_body">写的不错 顶一个</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2816082,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2816082,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2816082_avatar" style="display:none;">http://pic.cnblogs.com/face/552009/20141030013312.png</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2818199" class="layer">#20楼</a><a name="2818199" id="comment_anchor_2818199"></a>  <span class="comment_date">2013-11-17 19:48</span> <a id="a_comment_author_2818199" href="http://home.cnblogs.com/u/583180/" target="_blank">cityhunterok</a> <a href="http://msg.cnblogs.com/send/cityhunterok" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2818199" class="blog_comment_body">赞！受益了，多谢楼主！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2818199,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2818199,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2837612" class="layer">#21楼</a><a name="2837612" id="comment_anchor_2837612"></a>  <span class="comment_date">2013-12-15 17:07</span> <a id="a_comment_author_2837612" href="http://home.cnblogs.com/u/591788/" target="_blank">C点C</a> <a href="http://msg.cnblogs.com/send/C%E7%82%B9C" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2837612" class="blog_comment_body">楼主你好，我前面按照你的步骤来，都正确，可编译程序的时候出现了这个错误，请指导，谢谢<br>13/12/15 01:04:22 ERROR security.UserGroupInformation: PriviledgedActionException as:lc cause:org.apache.hadoop.ipc.RemoteException: org.apache.hadoop.mapred.JobTrackerNotYetInitializedException: JobTracker is not yet RUNNING<br>        at org.apache.hadoop.mapred.JobTracker.checkJobTrackerState(JobTracker.java:5199)<br>        at org.apache.hadoop.mapred.JobTracker.getNewJobId(JobTracker.java:3543)<br>        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)<br>        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)<br>        at java.lang.reflect.Method.invoke(Method.java:597)<br>        at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:587)<br>        at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:1432)<br>        at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:1428)<br>        at java.security.AccessController.doPrivileged(Native Method)<br>        at javax.security.auth.Subject.doAs(Subject.java:396)<br>        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1190)<br>        at org.apache.hadoop.ipc.Server$Handler.run(Server.java:1426)<br><br><br>可我JobTracker是运行起的啊，jps看是正常的</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2837612,&#39;Digg&#39;,this)">支持(1)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2837612,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2937472" class="layer">#22楼</a><a name="2937472" id="comment_anchor_2937472"></a>  <span class="comment_date">2014-05-12 23:16</span> <a id="a_comment_author_2937472" href="http://www.cnblogs.com/JavaSmart/" target="_blank">JavaSmart</a> <a href="http://msg.cnblogs.com/send/JavaSmart" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2937472" class="blog_comment_body">你这文档写的太牛逼了，不看内容什么的，真有耐心，有奉献精神！还把新版和旧版的拿出来对比了。<br><br>虽然我的集群在运行hadoop-mapreduce-examples-2.2.0.jar  pi 100 1000000的时候直接卡死了，整个集群机器都动不了。下次再来运行这个示例！！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2937472,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2937472,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2937472_avatar" style="display:none;">http://pic.cnblogs.com/face/366337/20130719013830.png</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3004318" class="layer">#23楼</a><a name="3004318" id="comment_anchor_3004318"></a>  <span class="comment_date">2014-08-09 21:46</span> <a id="a_comment_author_3004318" href="http://www.cnblogs.com/wodo2008/" target="_blank">wodo2008</a> <a href="http://msg.cnblogs.com/send/wodo2008" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3004318" class="blog_comment_body">很详细的解释，赞一个</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3004318,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3004318,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3005451" class="layer">#24楼</a><a name="3005451" id="comment_anchor_3005451"></a>  <span class="comment_date">2014-08-11 18:28</span> <a id="a_comment_author_3005451" href="http://www.cnblogs.com/gw811/" target="_blank">zero516cn</a> <a href="http://msg.cnblogs.com/send/zero516cn" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3005451" class="blog_comment_body">支持下！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3005451,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3005451,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_3005451_avatar" style="display:none;">http://pic.cnblogs.com/face/416402/20140622104013.png</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3006635" class="layer">#25楼</a><a name="3006635" id="comment_anchor_3006635"></a>  <span class="comment_date">2014-08-13 11:09</span> <a id="a_comment_author_3006635" href="http://www.cnblogs.com/zhengyuhong/" target="_blank">林羽飞扬</a> <a href="http://msg.cnblogs.com/send/%E6%9E%97%E7%BE%BD%E9%A3%9E%E6%89%AC" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3006635" class="blog_comment_body">博主你好，请问一下 “3.3 新的WordCount分析” 的 “2）Reduce过程” 中的 这一句“values是对应单词的计数值所组成的列表” ，这个列表是如何产生的？是Hadoop框架下自动完成的吗？能不能自定义这个列表产生的方法啊？</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3006635,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3006635,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_3006635_avatar" style="display:none;">http://pic.cnblogs.com/face/360090/20140428085211.png</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3011629" class="layer">#26楼</a><a name="3011629" id="comment_anchor_3011629"></a>  <span class="comment_date">2014-08-19 22:03</span> <a id="a_comment_author_3011629" href="http://home.cnblogs.com/u/636984/" target="_blank">Nbird</a> <a href="http://msg.cnblogs.com/send/Nbird" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3011629" class="blog_comment_body">楼主您好，请问新的WordCount里面为什么不设置<br>setInputFormatClass和setOutputFormatClass啊？</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3011629,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3011629,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3031109" class="layer">#27楼</a><a name="3031109" id="comment_anchor_3031109"></a>  <span class="comment_date">2014-09-19 16:19</span> <a id="a_comment_author_3031109" href="http://www.cnblogs.com/luoliang/" target="_blank">求 败</a> <a href="http://msg.cnblogs.com/send/%E6%B1%82%20%E8%B4%A5" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3031109" class="blog_comment_body">LZ：<br>1.2 MapReduce处理过程这段第二行的Hadoop函数接收应该是Reduce函数吧？</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3031109,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3031109,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_3031109_avatar" style="display:none;">http://pic.cnblogs.com/face/279248/20141212104936.png</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3045942" class="layer">#28楼</a><a name="3045942" id="comment_anchor_3045942"></a>  <span class="comment_date">2014-10-17 16:12</span> <a id="a_comment_author_3045942" href="http://home.cnblogs.com/u/682665/" target="_blank">弓箭手爱摄影</a> <a href="http://msg.cnblogs.com/send/%E5%BC%93%E7%AE%AD%E6%89%8B%E7%88%B1%E6%91%84%E5%BD%B1" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3045942" class="blog_comment_body"><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2751373" title="查看所回复的评论" onclick="commentManager.renderComments(0,50,2751373);">@</a>cgl2014<br><fieldset class="comment_quote"><legend><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#2751373" title="查看引用原文">引用</a></legend>"map函数接收一个&lt;key,value&gt;形式的输入，然后同样产生一个&lt;key,value&gt;形式的中间输出，Hadoop函数接收一个如&lt;key,(list of values)&gt;形式的输入，然后对这个value集合进行处理，每个reduce产生0或1个输出，reduce的输出也是&lt;key,value&gt;形式的。"<br>"Hadoop函数"，这个是笔误吧，是不是"reduce函数"呢？</fieldset><br>刚刚学习hadoop，我感觉不是笔误，这里研究的是map的输入，&lt;key,(list of values)&gt;指的是&lt;首字符偏移量，包含多个单词的一行内容&gt;。而reduce中是&lt;单词，{次数，次数...}&gt;</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3045942,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3045942,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3050223" class="layer">#29楼</a><a name="3050223" id="comment_anchor_3050223"></a>  <span class="comment_date">2014-10-24 10:21</span> <a id="a_comment_author_3050223" href="http://home.cnblogs.com/u/661018/" target="_blank">zhglhy</a> <a href="http://msg.cnblogs.com/send/zhglhy" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3050223" class="blog_comment_body">感谢楼主的耐心分享！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3050223,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3050223,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3063670" class="layer">#30楼</a><a name="3063670" id="comment_anchor_3063670"></a>  <span class="comment_date">2014-11-13 21:43</span> <a id="a_comment_author_3063670" href="http://home.cnblogs.com/u/692401/" target="_blank">孤云出岫</a> <a href="http://msg.cnblogs.com/send/%E5%AD%A4%E4%BA%91%E5%87%BA%E5%B2%AB" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3063670" class="blog_comment_body">我想问下我要在本机跑一下这个程序（为了和集群做个性能比较），这个代码该怎么改？？是setpath么？？求好心人分享，我还是个学生。。。。。。</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3063670,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3063670,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3064806" class="layer">#31楼</a><a name="3064806" id="comment_anchor_3064806"></a>  <span class="comment_date">2014-11-15 15:52</span> <a id="a_comment_author_3064806" href="http://home.cnblogs.com/u/693005/" target="_blank">土豆炖肉</a> <a href="http://msg.cnblogs.com/send/%E5%9C%9F%E8%B1%86%E7%82%96%E8%82%89" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3064806" class="blog_comment_body">刚开始学习，感谢楼主</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3064806,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3064806,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3079512" class="layer">#32楼</a><a name="3079512" id="comment_anchor_3079512"></a>  <span class="comment_date">2014-12-05 21:21</span> <a id="a_comment_author_3079512" href="http://home.cnblogs.com/u/700702/" target="_blank">hadoop小象</a> <a href="http://msg.cnblogs.com/send/hadoop%E5%B0%8F%E8%B1%A1" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3079512" class="blog_comment_body">楼主，我在Eclipse运行结果是这样的，请问这是哪里的问题呢？<br>14/12/05 19:52:53 WARN snappy.LoadSnappy: Snappy native library not loaded<br>14/12/05 19:52:53 INFO mapred.JobClient: Running job: job_201412060556_0003<br>14/12/05 19:52:55 INFO mapred.JobClient:  map 0% reduce 0%<br>14/12/05 19:53:04 INFO mapred.JobClient: Task Id : attempt_201412060556_0003_m_000000_0, Status : FAILED<br>java.lang.RuntimeException: java.lang.ClassNotFoundException: org.apache.hadoop.examples.WordCount$TokenizerMapper<br>	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:849)<br>	at org.apache.hadoop.mapreduce.JobContext.getMapperClass(JobContext.java:199)<br>	at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:719)<br>	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:370)<br>	at org.apache.hadoop.mapred.Child$4.run(Child.java:255)<br>	at java.security.AccessController.doPrivileged(Native Method)<br>	at javax.security.auth.Subject.doAs(Subject.java:396)<br>	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1149)<br>	at org.apache.hadoop.mapred.Child.main(Child.java:249)<br>Caused by: java.lang.ClassNotFoundException: org.apache.hadoop.examples.WordCount$TokenizerMapper<br>	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)<br>	at java.security.AccessController.doPrivileged(Native Method)<br>	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)<br>	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)<br>	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)<br>	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)<br>	at java.lang.Class.forName0(Native Method)<br>	at java.lang.Class.forName(Class.java:249)<br>	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:802)<br>	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:847)<br>	... 8 more<br><br>14/12/05 19:53:07 WARN mapred.JobClient: Error reading task outputworker5<br>14/12/05 19:53:07 WARN mapred.JobClient: Error reading task outputworker5<br>14/12/05 19:53:07 INFO mapred.JobClient: Task Id : attempt_201412060556_0003_m_000001_0, Status : FAILED<br>14/12/05 19:53:09 WARN mapred.JobClient: Error reading task outputworker4<br>14/12/05 19:53:09 WARN mapred.JobClient: Error reading task outputworker4<br>14/12/05 19:53:10 INFO mapred.JobClient: Task Id : attempt_201412060556_0003_m_000000_1, Status : FAILED<br>java.lang.RuntimeException: java.lang.ClassNotFoundException: org.apache.hadoop.examples.WordCount$TokenizerMapper<br>	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:849)<br>	at org.apache.hadoop.mapreduce.JobContext.getMapperClass(JobContext.java:199)<br>	at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:719)<br>	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:370)<br>	at org.apache.hadoop.mapred.Child$4.run(Child.java:255)<br>	at java.security.AccessController.doPrivileged(Native Method)<br>	at javax.security.auth.Subject.doAs(Subject.java:396)<br>	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1149)<br>	at org.apache.hadoop.mapred.Child.main(Child.java:249)<br>Caused by: java.lang.ClassNotFoundException: org.apache.hadoop.examples.WordCount$TokenizerMapper<br>	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)<br>	at java.security.AccessController.doPrivileged(Native Method)<br>	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)<br>	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)<br>	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)<br>	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)<br>	at java.lang.Class.forName0(Native Method)<br>	at java.lang.Class.forName(Class.java:249)<br>	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:802)<br>	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:847)<br>	... 8 more</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3079512,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3079512,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3135545" class="layer">#33楼</a><a name="3135545" id="comment_anchor_3135545"></a>  <span class="comment_date">2015-03-05 10:39</span> <a id="a_comment_author_3135545" href="http://www.cnblogs.com/lwer/" target="_blank">LWER</a> <a href="http://msg.cnblogs.com/send/LWER" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3135545" class="blog_comment_body">强，写得好</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3135545,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3135545,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3164893" class="layer">#34楼</a><a name="3164893" id="comment_anchor_3164893"></a>  <span class="comment_date">2015-04-17 15:19</span> <a id="a_comment_author_3164893" href="http://home.cnblogs.com/u/746179/" target="_blank">yu5358979</a> <a href="http://msg.cnblogs.com/send/yu5358979" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3164893" class="blog_comment_body">写的很好，就是缺这种无私奉献的人。为了评价专门注册用户来的</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3164893,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3164893,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3172047" class="layer">#35楼</a><a name="3172047" id="comment_anchor_3172047"></a>  <span class="comment_date">2015-04-28 13:35</span> <a id="a_comment_author_3172047" href="http://home.cnblogs.com/u/748863/" target="_blank">王二麻子_IT</a> <a href="http://msg.cnblogs.com/send/%E7%8E%8B%E4%BA%8C%E9%BA%BB%E5%AD%90_IT" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3172047" class="blog_comment_body">写的真好，楼主还在做Hadoop吗</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3172047,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3172047,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3311526" class="layer">#36楼</a><a name="3311526" id="comment_anchor_3311526"></a>  <span class="comment_date">2015-11-22 11:33</span> <a id="a_comment_author_3311526" href="http://www.cnblogs.com/whxlovely/" target="_blank">whxloveyrh</a> <a href="http://msg.cnblogs.com/send/whxloveyrh" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3311526" class="blog_comment_body">hduser@whx-desktop:~$ hadoop fs -mkdir input<br>15/11/22 11:29:51 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable<br>mkdir: `input': No such file or directory<br>hduser@whx-desktop:~$ hadoop fs -ls<br>15/11/22 11:30:09 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable<br>ls: `.': No such file or directory<br>hduser@whx-desktop:~$ <br>楼主这是什么原因呢？求指教，十分感谢<br>我的邮箱：wang010366@vip.qq.com</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3311526,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3311526,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_3311526_avatar" style="display:none;">http://pic.cnblogs.com/face/534703/20150606214947.png</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3311713" class="layer">#37楼</a><a name="3311713" id="comment_anchor_3311713"></a>  <span class="comment_date">2015-11-22 21:32</span> <a id="a_comment_author_3311713" href="http://www.cnblogs.com/whxlovely/" target="_blank">whxloveyrh</a> <a href="http://msg.cnblogs.com/send/whxloveyrh" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3311713" class="blog_comment_body">whx@whx-desktop:~$ hadoop fs -mkdir input<br>15/11/22 21:31:37 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable<br>mkdir: `input': No such file or directory<br>whx@whx-desktop:~$</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3311713,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3311713,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_3311713_avatar" style="display:none;">http://pic.cnblogs.com/face/534703/20150606214947.png</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3342354" class="layer">#38楼</a><a name="3342354" id="comment_anchor_3342354"></a><span id="comment-maxId" style="display:none;">3342354</span><span id="comment-maxDate" style="display:none;">2016/1/6 16:13:57</span>  <span class="comment_date">2016-01-06 16:13</span> <a id="a_comment_author_3342354" href="http://home.cnblogs.com/u/318207/" target="_blank">jiejiuzhang</a> <a href="http://msg.cnblogs.com/send/jiejiuzhang" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3342354" class="blog_comment_body">请问 ：<br><br>    现在与统计单词类似  ， 我要统计某个词语来自于哪些位置 ？<br><br>    比如 hello来自file1的第一行 ， file2的第一行<br><br>    比如 word 来自file1的第二行 ， file2的第二行<br><br>    这个怎么搞？</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3342354,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3342354,&#39;Bury&#39;,this)">反对(0)</a></div>
			</div>
		</div>
	<div id="comments_pager_bottom"></div></div><script type="text/javascript">var commentManager = new blogCommentManager();commentManager.renderComments(0);</script>
<div id="comment_form" class="commentform">
<a name="commentform"></a>
<div id="divCommentShow"></div>
<div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#" onclick="return RefreshPage();">刷新页面</a><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#top">返回顶部</a></div>
<div id="comment_form_container"><div class="login_tips">注册用户登录后才能发表评论，请 <a rel="nofollow" href="javascript:void(0);" class="underline" onclick="return login(&#39;commentform&#39;);">登录</a> 或 <a rel="nofollow" href="javascript:void(0);" class="underline" onclick="return register();">注册</a>，<a href="http://www.cnblogs.com/">访问</a>网站首页。</div></div>
<div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
<div id="ad_t2"><a href="http://www.ucancode.com/index.htm" target="_blank">【推荐】50万行VC++源码: 大型组态工控、电力仿真CAD与GIS源码库</a><br><a href="https://www.jpush.cn/" target="_blank">【推荐】极光推送30多万开发者的选择，SDK接入量超过30亿了，你还没注册？</a><br></div>
<div id="opt_under_post"></div>
<div id="ad_c1" class="c_ad_block"><a href="http://job.cnblogs.com/offer/50707/" target="_blank"><img width="300" height="250" src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/programming-is-an-art-form.jpg" alt="招聘ASP.NET 5开发工程师" title="招聘ASP.NET 5开发工程师"></a></div>
<div id="under_post_news"><div class="itnews c_ad_block"><b>最新IT新闻</b>:<br> ·  <a href="http://news.cnblogs.com/n/536776/" target="_blank">滴滴一年补贴34亿美元？Uber CEO爆一个大料</a><br> ·  <a href="http://news.cnblogs.com/n/536775/" target="_blank">英国拟允许司法部门搞黑客活动</a><br> ·  <a href="http://news.cnblogs.com/n/536774/" target="_blank">艾滋病大流行揭秘：源自同一祖先进化不到100年</a><br> ·  <a href="http://news.cnblogs.com/n/536773/" target="_blank">92.3%受访者主张惩治互联网公司不正当竞争行为</a><br> ·  <a href="http://news.cnblogs.com/n/536772/" target="_blank">其实，真正优秀的CEO并不忙</a><br>» <a href="http://news.cnblogs.com/" title="IT新闻" target="_blank">更多新闻...</a></div></div>
<div id="under_post_kb"><div class="itnews c_ad_block" id="kb_block"><b>最新知识库文章</b>:<br><div id="kb_recent"> ·  <a href="http://kb.cnblogs.com/page/536387/" target="_blank">Docker简介</a><br> ·  <a href="http://kb.cnblogs.com/page/536115/" target="_blank">Docker简明教程</a><br> ·  <a href="http://kb.cnblogs.com/page/535581/" target="_blank">Git协作流程</a><br> ·  <a href="http://kb.cnblogs.com/page/535355/" target="_blank">企业计算的终结</a><br> ·  <a href="http://kb.cnblogs.com/page/535278/" target="_blank">软件开发的核心</a><br></div>» <a href="http://kb.cnblogs.com/" target="_blank">更多知识库文章...</a></div></div>
<div id="HistoryToday" class="c_ad_block"></div>
<script type="text/javascript">
$(function () {
    setTimeout(function () { incrementViewCount(cb_entryId); }, 50);
    deliverAdT2();
    deliverAdC1();    
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);    
});
</script>
</div>


	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<!--done-->
<div class="newsItem">
<h3 class="catListTitle">公告</h3>
	<div id="blog-news"><p></p>
<img src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/a202708.png" alt="虾皮的头像" class="img_avatar"><div id="profile_block">昵称：<a href="http://home.cnblogs.com/u/xia520pi/">虾皮</a><br>园龄：<a href="http://home.cnblogs.com/u/xia520pi/" title="入园时间：2010-11-17">5年1个月</a><br>荣誉：<a href="http://www.cnblogs.com/expert/">推荐博客</a><br>粉丝：<a href="http://home.cnblogs.com/u/xia520pi/followers/">1696</a><br>关注：<a href="http://home.cnblogs.com/u/xia520pi/followees/">2</a><div id="p_b_follow"><a href="javascript:void(0);" onclick="cnblogs.UserManager.FollowBlogger(&#39;aff597ab-3df2-df11-ac81-842b2b196315&#39;)">+加关注</a></div></div></div><script type="text/javascript">loadBlogNews();</script>
</div>

			<div id="calendar"><div id="blog-calendar" style=""><table id="blogCalendar" class="Cal" cellspacing="0" cellpadding="0" title="Calendar">
	<tbody><tr><td colspan="7"><table class="CalTitle" cellspacing="0">
		<tbody><tr><td class="CalNextPrev"><a href="javascript:void(0);" onclick="loadBlogCalendar(&#39;2012/04/01&#39;);return false;">&lt;</a></td><td align="center">2012年5月</td><td class="CalNextPrev" align="right"><a href="javascript:void(0);" onclick="loadBlogCalendar(&#39;2012/06/01&#39;);return false;">&gt;</a></td></tr>
	</tbody></table></td></tr><tr><th class="CalDayHeader" align="center" abbr="日" scope="col">日</th><th class="CalDayHeader" align="center" abbr="一" scope="col">一</th><th class="CalDayHeader" align="center" abbr="二" scope="col">二</th><th class="CalDayHeader" align="center" abbr="三" scope="col">三</th><th class="CalDayHeader" align="center" abbr="四" scope="col">四</th><th class="CalDayHeader" align="center" abbr="五" scope="col">五</th><th class="CalDayHeader" align="center" abbr="六" scope="col">六</th></tr><tr><td class="CalOtherMonthDay" align="center">29</td><td class="CalOtherMonthDay" align="center">30</td><td align="center">1</td><td align="center">2</td><td align="center">3</td><td align="center">4</td><td class="CalWeekendDay" align="center">5</td></tr><tr><td class="CalWeekendDay" align="center">6</td><td align="center">7</td><td align="center">8</td><td align="center">9</td><td align="center">10</td><td align="center"><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/11.html"><u>11</u></a></td><td class="CalWeekendDay" align="center"><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/12.html"><u>12</u></a></td></tr><tr><td class="CalWeekendDay" align="center">13</td><td align="center">14</td><td align="center">15</td><td align="center"><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16.html"><u>16</u></a></td><td align="center">17</td><td align="center">18</td><td class="CalWeekendDay" align="center">19</td></tr><tr><td class="CalWeekendDay" align="center"><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/20.html"><u>20</u></a></td><td align="center">21</td><td align="center"><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/22.html"><u>22</u></a></td><td align="center">23</td><td align="center">24</td><td align="center">25</td><td class="CalWeekendDay" align="center"><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/26.html"><u>26</u></a></td></tr><tr><td class="CalWeekendDay" align="center">27</td><td align="center"><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/28.html"><u>28</u></a></td><td align="center">29</td><td align="center">30</td><td align="center">31</td><td class="CalOtherMonthDay" align="center">1</td><td class="CalOtherMonthDay" align="center">2</td></tr><tr><td class="CalOtherMonthDay" align="center">3</td><td class="CalOtherMonthDay" align="center">4</td><td class="CalOtherMonthDay" align="center">5</td><td class="CalOtherMonthDay" align="center">6</td><td class="CalOtherMonthDay" align="center">7</td><td class="CalOtherMonthDay" align="center">8</td><td class="CalOtherMonthDay" align="center">9</td></tr>
</tbody></table></div><script type="text/javascript">loadBlogDefaultCalendar();</script></div>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"><div id="sidebar_search" class="sidebar-block">
<div id="sidebar_search" class="mySearch">
<h3 class="catListTitle">搜索</h3>
<div id="sidebar_search_box">
<div id="widget_my_zzk" class="div_my_zzk"><input type="text" id="q" onkeydown="return zzk_go_enter(event);" class="input_my_zzk">&nbsp;<input onclick="zzk_go()" type="button" value="找找看" id="btnZzk" class="btn_my_zzk"></div>
<div id="widget_my_google" class="div_my_zzk"><input type="text" name="google_q" id="google_q" onkeydown="return google_go_enter(event)" class="input_my_zzk">&nbsp;<input onclick="google_go()" type="button" value="谷歌搜索" class="btn_my_zzk"></div>
</div>
</div>

</div><div id="sidebar_shortcut" class="sidebar-block">
<div class="catListLink">
<h3 class="catListTitle">常用链接</h3>
<ul>
<li><a href="http://www.cnblogs.com/xia520pi/p/" title="我的博客的随笔列表">我的随笔</a></li><li><a href="http://www.cnblogs.com/xia520pi/MyComments.html" title="我发表过的评论列表">我的评论</a></li><li><a href="http://www.cnblogs.com/xia520pi/OtherPosts.html" title="我评论过的随笔列表">我的参与</a></li><li><a href="http://www.cnblogs.com/xia520pi/RecentComments.html" title="我的博客的评论列表">最新评论</a></li><li><a href="http://www.cnblogs.com/xia520pi/tag/" title="我的博客的标签列表">我的标签</a></li>
</ul>
<div id="itemListLin_con" style="display:none;">
<ul>

</ul>
</div>
</div></div><div id="sidebar_toptags" class="sidebar-block"></div><div id="sidebar_categories">
<div class="catListPostCategory">
<h3 class="catListTitle">随笔分类</h3>

<ul>

<li><a id="CatList_LinkList_0_Link_0" href="http://www.cnblogs.com/xia520pi/category/326363.html">代码分析(2)</a> </li>

<li><a id="CatList_LinkList_0_Link_1" href="http://www.cnblogs.com/xia520pi/category/326362.html">代码人生(3)</a> </li>

<li><a id="CatList_LinkList_0_Link_2" href="http://www.cnblogs.com/xia520pi/category/569951.html">积微成著(11)</a> </li>

<li><a id="CatList_LinkList_0_Link_3" href="http://www.cnblogs.com/xia520pi/category/332699.html">品书文摘(1)</a> </li>

<li><a id="CatList_LinkList_0_Link_4" href="http://www.cnblogs.com/xia520pi/category/381434.html">设计模式</a> </li>

<li><a id="CatList_LinkList_0_Link_5" href="http://www.cnblogs.com/xia520pi/category/326361.html">细细品味C#(9)</a> </li>

<li><a id="CatList_LinkList_0_Link_6" href="http://www.cnblogs.com/xia520pi/category/551392.html">细细品味CentOS(13)</a> </li>

<li><a id="CatList_LinkList_0_Link_7" href="http://www.cnblogs.com/xia520pi/category/333196.html">细细品味DB</a> </li>

<li><a id="CatList_LinkList_0_Link_8" href="http://www.cnblogs.com/xia520pi/category/327631.html">细细品味ExtJS(5)</a> </li>

<li><a id="CatList_LinkList_0_Link_9" href="http://www.cnblogs.com/xia520pi/category/327788.html">细细品味Flex(4)</a> </li>

<li><a id="CatList_LinkList_0_Link_10" href="http://www.cnblogs.com/xia520pi/category/346943.html">细细品味Hadoop(15)</a> </li>

<li><a id="CatList_LinkList_0_Link_11" href="http://www.cnblogs.com/xia520pi/category/687679.html">细细品味Hive(1)</a> </li>

<li><a id="CatList_LinkList_0_Link_12" href="http://www.cnblogs.com/xia520pi/category/328787.html">细细品味Java(5)</a> </li>

<li><a id="CatList_LinkList_0_Link_13" href="http://www.cnblogs.com/xia520pi/category/370858.html">细细品味Nutch(7)</a> </li>

<li><a id="CatList_LinkList_0_Link_14" href="http://www.cnblogs.com/xia520pi/category/574375.html">细细品味PHP(4)</a> </li>

<li><a id="CatList_LinkList_0_Link_15" href="http://www.cnblogs.com/xia520pi/category/591526.html">细细品味Shell(6)</a> </li>

<li><a id="CatList_LinkList_0_Link_16" href="http://www.cnblogs.com/xia520pi/category/373864.html">细细品味Solr(1)</a> </li>

<li><a id="CatList_LinkList_0_Link_17" href="http://www.cnblogs.com/xia520pi/category/735194.html">细细品味Storm(5)</a> </li>

<li><a id="CatList_LinkList_0_Link_18" href="http://www.cnblogs.com/xia520pi/category/379465.html">细细品味Web(5)</a> </li>

<li><a id="CatList_LinkList_0_Link_19" href="http://www.cnblogs.com/xia520pi/category/735048.html">细细品味架构(1)</a> </li>

<li><a id="CatList_LinkList_0_Link_20" href="http://www.cnblogs.com/xia520pi/category/329666.html">杂七杂八(5)</a> </li>

<li><a id="CatList_LinkList_0_Link_21" href="http://www.cnblogs.com/xia520pi/category/572867.html">在线工具(2)</a> </li>

</ul>

</div>

<div class="catListPostArchive">
<h3 class="catListTitle">随笔档案</h3>

<ul>

<li><a id="CatList_LinkList_1_Link_0" href="http://www.cnblogs.com/xia520pi/archive/2015/09.html">2015年9月 (6)</a> </li>

<li><a id="CatList_LinkList_1_Link_1" href="http://www.cnblogs.com/xia520pi/archive/2015/06.html">2015年6月 (1)</a> </li>

<li><a id="CatList_LinkList_1_Link_2" href="http://www.cnblogs.com/xia520pi/archive/2015/05.html">2015年5月 (1)</a> </li>

<li><a id="CatList_LinkList_1_Link_3" href="http://www.cnblogs.com/xia520pi/archive/2015/04.html">2015年4月 (1)</a> </li>

<li><a id="CatList_LinkList_1_Link_4" href="http://www.cnblogs.com/xia520pi/archive/2014/08.html">2014年8月 (2)</a> </li>

<li><a id="CatList_LinkList_1_Link_5" href="http://www.cnblogs.com/xia520pi/archive/2014/07.html">2014年7月 (4)</a> </li>

<li><a id="CatList_LinkList_1_Link_6" href="http://www.cnblogs.com/xia520pi/archive/2014/06.html">2014年6月 (9)</a> </li>

<li><a id="CatList_LinkList_1_Link_7" href="http://www.cnblogs.com/xia520pi/archive/2014/05.html">2014年5月 (1)</a> </li>

<li><a id="CatList_LinkList_1_Link_8" href="http://www.cnblogs.com/xia520pi/archive/2014/04.html">2014年4月 (20)</a> </li>

<li><a id="CatList_LinkList_1_Link_9" href="http://www.cnblogs.com/xia520pi/archive/2014/03.html">2014年3月 (3)</a> </li>

<li><a id="CatList_LinkList_1_Link_10" href="http://www.cnblogs.com/xia520pi/archive/2014/02.html">2014年2月 (5)</a> </li>

<li><a id="CatList_LinkList_1_Link_11" href="http://www.cnblogs.com/xia520pi/archive/2012/07.html">2012年7月 (1)</a> </li>

<li><a id="CatList_LinkList_1_Link_12" href="http://www.cnblogs.com/xia520pi/archive/2012/06.html">2012年6月 (4)</a> </li>

<li><a id="CatList_LinkList_1_Link_13" href="http://www.cnblogs.com/xia520pi/archive/2012/05.html">2012年5月 (15)</a> </li>

<li><a id="CatList_LinkList_1_Link_14" href="http://www.cnblogs.com/xia520pi/archive/2012/04.html">2012年4月 (5)</a> </li>

<li><a id="CatList_LinkList_1_Link_15" href="http://www.cnblogs.com/xia520pi/archive/2012/01.html">2012年1月 (1)</a> </li>

<li><a id="CatList_LinkList_1_Link_16" href="http://www.cnblogs.com/xia520pi/archive/2011/12.html">2011年12月 (10)</a> </li>

<li><a id="CatList_LinkList_1_Link_17" href="http://www.cnblogs.com/xia520pi/archive/2011/11.html">2011年11月 (3)</a> </li>

<li><a id="CatList_LinkList_1_Link_18" href="http://www.cnblogs.com/xia520pi/archive/2011/10.html">2011年10月 (14)</a> </li>

</ul>

</div>

</div><div id="sidebar_recentcomments" class="sidebar-block"><div id="recent_comments_wrap">
<div class="catListComment">
<h3 class="catListTitle">最新评论</h3>
	<div id="RecentCommentsBlock"><ul>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2504205.html#3342354">1. Re:Hadoop集群（第6期）_WordCount运行详解</a></li>
    <li class="recent_comment_body">请问 ： 现在与统计单词类似 ， 我要统计某个词语来自于哪些位置 ？ 比如 hello来自file1的第一行 ， file2的第一行 比如 word 来自file1的第二行 ， f......</li>
    <li class="recent_comment_author">--jiejiuzhang</li>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/xia520pi/p/3697099.html#3328164">2. Re:PHP中include和require的区别详解</a></li>
    <li class="recent_comment_body">@Felix_XP我的也是，能包含不同的文件...</li>
    <li class="recent_comment_author">--新手码农</li>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/xia520pi/p/4825326.html#3322464">3. Re:跟我学习Storm_Storm基本架构</a></li>
    <li class="recent_comment_body">目前我所知道的是：hadoop：批处理；spark：迭代运算；storm：流处理</li>
    <li class="recent_comment_author">--loadofleaf</li>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/xia520pi/p/4825326.html#3322463">4. Re:跟我学习Storm_Storm基本架构</a></li>
    <li class="recent_comment_body">请问可以跟我解答一下hadoop、spark和storm的应用场景和相互优劣吗，</li>
    <li class="recent_comment_author">--loadofleaf</li>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/xia520pi/p/3697099.html#3319690">5. Re:PHP中include和require的区别详解</a></li>
    <li class="recent_comment_body">官方文档说include和require唯一的区别就是如2.1所说，条件引用说法不对，　如下代码都不会引用进来if (false) {	require 'req.php';}if (false) {	......</li>
    <li class="recent_comment_author">--xpentium</li>
</ul>
</div>
</div>
</div></div><div id="sidebar_topviewedposts" class="sidebar-block"><div id="topview_posts_wrap">
<div class="catListView">
<h3 class="catListTitle">阅读排行榜</h3>
	<div id="TopViewPostsBlock"><ul><li><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2503949.html">1. Hadoop集群（第5期）_Hadoop安装配置(205915)</a></li><li><a href="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园.html">2. Hadoop集群（第6期）_WordCount运行详解(92856)</a></li><li><a href="http://www.cnblogs.com/xia520pi/archive/2012/06/04/2534533.html">3. Hadoop集群（第9期）_MapReduce初级案例(72761)</a></li><li><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/20/2510723.html">4. Hadoop集群（第7期）_Eclipse开发环境设置(62547)</a></li><li><a href="http://www.cnblogs.com/xia520pi/archive/2012/04/08/2437875.html">5. Hadoop集群系列（目录）(47200)</a></li></ul></div>
</div>
</div></div><div id="sidebar_topcommentedposts" class="sidebar-block"><div id="topfeedback_posts_wrap">
<div class="catListFeedback">
<h3 class="catListTitle">评论排行榜</h3>
	<div id="TopFeedbackPostsBlock"><ul><li><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2503949.html">1. Hadoop集群（第5期）_Hadoop安装配置(86)</a></li><li><a href="http://www.cnblogs.com/xia520pi/archive/2012/04/08/2437875.html">2. Hadoop集群系列（目录）(50)</a></li><li><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/20/2510723.html">3. Hadoop集群（第7期）_Eclipse开发环境设置(46)</a></li><li><a href="http://www.cnblogs.com/xia520pi/archive/2012/06/04/2534533.html">4. Hadoop集群（第9期）_MapReduce初级案例(43)</a></li><li><a href="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园.html">5. Hadoop集群（第6期）_WordCount运行详解(38)</a></li></ul></div>
</div>
</div></div><div id="sidebar_topdiggedposts" class="sidebar-block"><div id="topdigg_posts_wrap">
<div class="catListView">
<h3 class="catListTitle">推荐排行榜</h3>
<div id="TopDiggPostsBlock"><ul><li><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2503949.html">1. Hadoop集群（第5期）_Hadoop安装配置(106)</a></li><li><a href="http://www.cnblogs.com/xia520pi/archive/2012/04/08/2437875.html">2. Hadoop集群系列（目录）(79)</a></li><li><a href="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园.html">3. Hadoop集群（第6期）_WordCount运行详解(68)</a></li><li><a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2503770.html">4. Hadoop集群（第1期）_CentOS安装配置(65)</a></li><li><a href="http://www.cnblogs.com/xia520pi/archive/2012/06/04/2534533.html">5. Hadoop集群（第9期）_MapReduce初级案例(33)</a></li></ul></div>
</div></div></div></div><script type="text/javascript">loadBlogSideColumn();</script><iframe src="./Hadoop集群（第6期）_WordCount运行详解 - 虾皮 - 博客园_files/container.html" style="visibility: hidden; display: none;"></iframe>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		
<!--done-->
Copyright ©2016 虾皮
	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


</body></html>