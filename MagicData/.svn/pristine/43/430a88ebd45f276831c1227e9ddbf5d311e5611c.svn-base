package com.integrity.dataSmart.test;

import java.util.Iterator;
import java.util.List;
import java.util.Set;

import org.apache.commons.configuration.BaseConfiguration;
import org.junit.Test;

import com.integrity.dataSmart.common.DataType;
import com.integrity.dataSmart.titanGraph.dao.SearchDetailDao;
import com.thinkaurelius.titan.core.TitanFactory;
import com.thinkaurelius.titan.core.TitanGraph;
import com.tinkerpop.blueprints.Edge;
import com.tinkerpop.blueprints.Vertex;

public class TestDEMO1 {
	
/*	@Test
	public void run(){
		SearchDetailDao sdd = new SearchDetailDao();
		List<List<Vertex>> allObjs = sdd.getVertexByProperty("name","lilan");
		System.out.println(allObjs);
	}*/
	public static void main(String[] args) {
		 BaseConfiguration baseConfiguration = new BaseConfiguration();
		 System.out.println("开始连接数据库...");
		 baseConfiguration.setProperty("storage.backend", "hbase");
		 baseConfiguration.setProperty("storage.hostname", "192.168.40.10");
		 baseConfiguration.setProperty("storage.tablename","titan");
		 TitanGraph graph = TitanFactory.open(baseConfiguration);
		 System.out.println("数据库已连接");
		 
		 Iterable<Vertex> lisiX = graph.getVertices("numid", "1391683396");// 12w12w12@qq.com
		 if(lisiX.iterator().hasNext()){
		 Vertex lisi = lisiX.iterator().next();
		 if(lisi.getProperty("type").equals("IM")){
			 Set<String> set = lisi.getPropertyKeys();
				for (String key : set) {
					System.out.println("QQ:");
					System.out.println("key:"+key+"|value:"+lisi.getProperty(key));
				}
				lisi.remove();
				/*Iterator<Vertex> qs = lisi.query().labels(DataType.GROUP).vertices().iterator();//成员节点
				while(qs.hasNext()){
					Vertex ss = qs.next();
					Set<String> set1 = ss.getPropertyKeys();
					for (String key : set1) {
						System.out.println("key:"+key+"|value:"+ss.getProperty(key));
					}
				}*/
				
		 }
	}
		 
		 graph.shutdown();
	
	}
	
}
