package com.integrity.dataSmart.test;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import org.apache.commons.configuration.BaseConfiguration;

import com.thinkaurelius.titan.core.TitanFactory;
import com.thinkaurelius.titan.core.TitanGraph;
import com.tinkerpop.blueprints.Vertex;

public class testDEMO {
	public static void main(String[] args) {
		BaseConfiguration baseConfiguration = new BaseConfiguration();
		 System.out.println("开始连接数据库...");
		 baseConfiguration.setProperty("storage.backend", "hbase");
		 baseConfiguration.setProperty("storage.hostname", "192.168.40.10");
		 baseConfiguration.setProperty("storage.tablename","titan");
		 TitanGraph graph = TitanFactory.open(baseConfiguration);
		 System.out.println("数据库已连接");
		 

		 Iterable<Vertex> G =  graph.query().has("orderno","125").has("hotelid","000082").vertices();
		 Iterator<Vertex> a  =G.iterator();
		 while(a.hasNext()){
		 Vertex  karry = a.next();
		 if(karry.getProperty("type").equals("StayEvent")){
		 Set<String> set = karry.getPropertyKeys();
		 for (String key : set) {
			System.out.println("key:"+key+"|value:"+karry.getProperty(key));
		}
		 
		 Iterator<Vertex> op=  karry.query().labels(new String[]{"stay"}).vertices().iterator();
		 while (op.hasNext()) {
			Vertex s = op.next();
			Set<String> sets = s.getPropertyKeys();
			for (String key : sets) {
				System.out.println("key:"+key+"|value:"+s.getProperty(key));
			}
		}
		 
		 System.out.println("--------jack-------");
		 Iterator<Vertex> opc=  karry.query().labels(new String[]{"cohabit"}).vertices().iterator();
		 while (opc.hasNext()) {
				Vertex s = opc.next();
				Set<String> sets = s.getPropertyKeys();
				for (String key : sets) {
					System.out.println("key:"+key+"|value:"+s.getProperty(key));
				}
			}
		 }
		 }
		 System.out.println("------------->center");
		 
		 
		 Iterable<Vertex> G1 =  graph.getVertices("numid","403926114");
		 List<Vertex> friends = new ArrayList<Vertex>();
		 Set<Vertex> fr = new HashSet<Vertex>();
		 Iterator<Vertex> as = G1.iterator();
		 int co = 0;
		 if(as.hasNext()){
		 Vertex  karry = as.next();
		 Set<String> set = karry.getPropertyKeys();
			for (String key : set) {
				System.out.println("key:"+key+"|value:"+karry.getProperty(key));
			}
		 if(karry.getProperty("type").equals("IM")){
			 
			 Iterator<Vertex> ops=  karry.query().labels(new String[]{"group"}).vertices().iterator();
			 while (ops.hasNext()) {
				 co += 1;
				 System.out.println("Q组"+co);
				Vertex s = ops.next();
				Set<String> sets = s.getPropertyKeys();
				for (String key : sets) {
					System.out.println("key:"+key+"|value:"+s.getProperty(key));
				}
			}
			 
		 }
		
			 }
		 
		 //根据groupnum 删除多余群组
/*		 System.out.println("QQ群");
		 Iterable<Vertex> Groups =  graph.getVertices("groupnum","1000008");
		 Iterator<Vertex> gg = Groups.iterator();
		 while(gg.hasNext()){
			 Vertex groupss = gg.next();
			 Iterator<Vertex> ops=  groupss.query().labels(new String[]{"group"}).vertices().iterator();
			 Set<String> sets = groupss.getPropertyKeys();
				for (String key : sets) {
					System.out.println("key:"+key+"|value:"+groupss.getProperty(key));
				}
			 
		 }*/
		 
		 
		 graph.shutdown();
		 }
		 
	}


