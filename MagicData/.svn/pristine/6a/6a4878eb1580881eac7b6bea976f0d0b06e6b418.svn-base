$(function() {
	/*
	 * @author lifusheng
	 */
	                   var click=0;
//点击高级查询触发的事件
$("#advancedsearch").click(function() {
	                  click=click+1;
						var queryableMap = pageVariate.queryableMap;
						var aliasAll =pageVariate.aliasAll;
						var m = "";
						if(click==1){
						    	for ( var key in queryableMap) {
									// 动态增加下拉框
									     if(key=="Person"){
										     $("#queryable").append("<option value='" + key + "' selected='selected'>" + key+ "</option>");
											 for (var i = 0; i < queryableMap.Person.length; i++) {
												var personquerable = queryableMap.Person[i];
												var personalias = aliasAll.Person[personquerable];
												m += " <li class='gjsearchLi'>";
												m += "<span>" + personalias+ "</span>";
												var realid = "Person"+ i;
												m += "<input type='text'  id='"+ realid + "'  />";
												m += "</li>";
											                                                      }
										        $("#point").html(m);
									                    }
										if(key!="Person"){
										      $("#queryable").append("<option value='" + key + "'>" + key+ "</option>");
										                  }
									                               }
						             }
						$("#queryable").bind("change",function() {
											m = "";
											var selectvalue = $("#queryable  option:selected").text();
											// 页面添加
											for (var i = 0; i < queryableMap[selectvalue].length; i++) {
												var querable = queryableMap[selectvalue][i];
												var alias = aliasAll[selectvalue][querable];
												if (querable == "arrivedate"| querable == "departuredate") {
													m += " <li class='gjsearchLi'>";
													m += "<span>" + alias+ "</span>";
													var realid = selectvalue+ i;
													m += "<input type='text'  id='"+ realid + "'  />";
													m += "</li>";
												}
												else {
													m += " <li class='gjsearchLi'>";
													m += "<span>" + alias+ "</span>";
													var realid = selectvalue+ i;
													m += "<input type='text'  id='"+ realid + "'  />";
													m += "</li>";
												}

											}
											$("#point").html(m);
										                         })
						 $("#advancesearch").show();
					                      });
 //点击查询触发的事件      
 $("#query").click(function() {
	                        var queryableMap = pageVariate.queryableMap;
		                    var aliasAll =pageVariate.aliasAll;
		                    var selectvalue = $("#queryable  option:selected").text();
              	             //构建查询的json字符串                                      
		                    var json = "{";
		                    json += "\"";
		                    json += selectvalue;
		                    json += "\"";
		                    json += ":{";
		                   for (var i = 0; i < queryableMap[selectvalue].length; i++) {
			                      var id = selectvalue + i;
			                      var m = $("#" + id).val();
  			                          m=trim(m);
			                      if(m!=""){
			                          json += "\"";
								  json += queryableMap[selectvalue][i];
								  json += "\"";
								  json += ":";
								  json += "\"";
								  json += m;
								  json += "\"" + ",";
											          }
			                     if (i == queryableMap[selectvalue].length - 1) {
				                     json = json.substring(0, json.length - 1);
				                     json += "}}";
			                                                                     }
			                     				                                        }
		                
                          //当用户什么都不输入的时候控制不让用户提交
		                    var sum = 0;
		                    $("input[type=text]").each(function(i){
		                            var text = $(this).val();
		                            if(text!=""){
		                                  sum += 1;
		                                         }
		                                                          });
		                    if(sum==0){
		                    alert("请输入查询条件");
		                               }
		              		//向后台传递json数据进行查询
	                       if(sum!=0){
	                    	   $.ajax({  
		               				type : "post",  
		               			    url : pageVariate.base + "query/findObjByMoreProperty.action", 
		               	 	        data:{"searchJson":json},
		               				dataType: "json",
		               				success : function(data){
		               					maskManager.hide();
		               					pageVariate.tempData = eval(data);
		               					console.log(pageVariate.tempData);
		               		        	var nodeSize = pageVariate.tempData.nodes.length;
		               		            if(nodeSize == 1){
		               		            	searchManager.searchLinkage(pageVariate.tempData);
		               		            	$(".easyui-tabs").tabs('select', 0);
		               		            }else if(nodeSize > 1){
		               		           //lifusheng5月16日增加的动态查询内容***********
		               		   		     //**************获取表头*************//	        	
		               		        	 var aliasAll =pageVariate.aliasAll;
		               		        	 var connect = "";
		               		        	 var tdconnect = "";
		               		        	 var thcollection="";
		               		        	 var tdcollection="";
		               		        	 var type;
		               		        	 var td;
		               		        	 $.each(aliasAll, function(index, element) {
		                		        		connect+= "<h3>查询结果显示</h3>";
		               		        		    connect+= "<b class='closeB' onclick=\"('.searchtccBox').hide()\"</b>";
		               		        		    connect+= " </div> ";
		               		        		    connect+= " <ul class='clearfix' > ";
		               	     		        	connect+= "<li class='gjsearchLi'>" ;
		               	     		        	connect+= "<span>" +element[index]+ "</span>" ;
		               	     		        	connect+= "</li>" ;
		               	     		        	connect+= "</ul>" ;
		               	     		        	connect+= "<table id='"+ index + "' width='100%'  border='0' cellpadding='0' cellspacing='2' height='100%'>" ;
		               	     		        	connect+= "<thead>" ;
		               	     		        	connect+= "<tr>";
		               		        		             $.each(element, function(i, e) {
		               					        		        if(i!=index){
		               					        		           connect+= "<th  aa='"+ i + "'>" + e + "</th>";
		               					        		        	             }
		               					        		        			        	  })
		                       		                               connect+= "</tr>";
		                       		             		           connect+= "</thead>";
		               					        		           connect+= "<tbody id='"+ index + "'>";
		               										       connect+= "</tbody>";
		               					        		           connect+= "</table>";
		               		        		            		        		             
		                      			                                                        })
		               		            $("#tableshowall").html(connect);
		               		        	//对应填数据  
		               		            $.each(pageVariate.tempData.nodes, function(queryindex, value) {
		                                   	   type=value.type;
		               		        	              					        	    })
		               		        	 //构造第一个字符串        	   	 
		               		            var collection=aliasAll[type];
		                                thcollection += "{";
		               	        		for(var key in  collection){  
		               	        				  if(type!=key){
		               			        				 thcollection += "\"";
		               			        				 thcollection += key;
		               			        				 thcollection += "\"";
		               			        				 thcollection += ":";
		               			        				 thcollection += "\"";
		               			        				 thcollection += key;
		               			        				 thcollection += "\"";
		               			        				 thcollection += ",";
		               	        			        		   }
		               	        			         			  }  
		               	        		thcollection = thcollection.substring(0, thcollection.length - 1);
		               	        		thcollection += "}";
		               	        		var thcollectionjson = $.parseJSON(thcollection);
		               	        		$.each(pageVariate.tempData.nodes, function(tdindex, tdvalue) {
		               	        			  tdcollection = "<tr>";
		               			       for(var key1 in thcollectionjson){
		               			        		  if(tdvalue[key1]!=undefined){
		               			        			  tdcollection += "<td>";
		               			        			  tdcollection += tdvalue[key1];
		               			        		      tdcollection += "</td>";
		               			        		                             }
		               			        		  if(tdvalue[key1]==undefined){
		               			        			  tdcollection += "<td>";
		               			        			  tdcollection += "";
		               				        		  tdcollection += "</td>";
		               				        		                          }
		               			        	                         }
		               			        	      tdcollection += "</tr>"
		               			                  $("#"+type).append(tdcollection);
		               			        	  	        		                   })
		               	        		
		               				      //lifusheng5月12日增加的动态查询内容************************
		               		            	
//		               		            	searchManager.moreNodeHandle(pageVariate.tempData);
//		               		            	$(".easyui-tabs").tabs('select', 0);
		               		            }else{
		               		             	hintManager.showHint("未查询到数据。");
		               		            }
		               				},
		               		        error:function(){
		               		         	maskManager.hide();
		               		        	hintManager.showHint("未查询到数据。");
		               		        }
		               			});
	                       }   
	                       
	                       //弹出查询结果展示页面
	                       if(sum!=0){  
//	                       searchshow("");
	                      $("#tableshow").show();
	                       }
		});
	//清空
$("#clear").click(function() {
	$("input").val("");
	                          });
	
                                          })
//删除左右两端的空格
function trim(str){ 
　　     return str.replace(/(^\s*)|(\s*$)/g, "");
　　 }

function searchshow(data,click){
	//lifusheng5月12日增加的动态查询内容***********
	     //**************获取表头*************//	

	console.log(click);
	 var aliasAll =pageVariate.aliasAll;
	 var connect="<h3>查询结果显示</h3>";
	 var tdconnect = "";
	 var thcollection="";
	 var tdcollection="";
	 var type;
	 var td;
	 var uuid;
	 $.each(aliasAll, function(index, element) {
		    
		    connect+= "<b class='closeB' onclick=\"$('.searchtccBox').hide()\"></b>";
		    connect+= " </div> ";
		    connect+= " <ul class='clearfix' > ";
        	connect+= "<li class='gjsearchLi'>" ;
        	connect+= "<span>节点名称：" +element[index]+ "</span>" ;
        	connect+= "</li>" ;
        	connect+= "</ul>" ;
        	connect+= "<table class=''"+ index + "''  width='100%'  border='0' cellpadding='0' cellspacing='2' height='100%'>" ;
        	connect+= "<thead>" ;
        	connect+= "<tr>";
		             $.each(element, function(i, e) {
	        		        if(i!=index){
	        		           connect+= "<th>" + e + "</th>";
	        		        	             }
	        		        			        	  })
                               connect+= "</tr>";
            		           connect+= "</thead>";
	        		           connect+= "<tbody id='"+ index + "'>";
						       connect+= "</tbody>";
	        		           connect+= "</table>";
		            		        		             
	                                                        })
   $("#tableshowall").html(connect);
	//对应填数据  
   $.each(data.nodes, function(queryindex, value) {
   	   type=value.type;
	              					        	    })
	 //构造第一个字符串        	   	 
   var collection=aliasAll[type];
   thcollection += "{";
	for(var key in  collection){  
			  if(type!=key){
   				 thcollection += "\"";
   				 thcollection += key;
   				 thcollection += "\"";
   				 thcollection += ":";
   				 thcollection += "\"";
   				 thcollection += key;
   				 thcollection += "\"";
   				 thcollection += ",";
		        		   }
		         			  }  
	thcollection = thcollection.substring(0, thcollection.length - 1);
	thcollection += "}";
	var thcollectionjson = $.parseJSON(thcollection);
	$.each(data.nodes, function(tdindex, tdvalue) {
		  uuid=tdvalue.uuid;
		  tdcollection = "<tr onclick=clickline(this,'"+type+"');>";
  for(var key1 in thcollectionjson){
   		  if(tdvalue[key1]!=undefined){
   			  tdcollection += "<td>";
   			  tdcollection += tdvalue[key1];
   		      tdcollection += "</td>";
   		                             }
   		  if(tdvalue[key1]==undefined){
   			  tdcollection += "<td>";
   			  tdcollection += "";
       		  tdcollection += "</td>";
       		                          }
   	                         }
   	      tdcollection += "</tr>"
//  	    	if(click==1){
             $("#"+type).append(tdcollection);
//   	    	             } 
   	  	        		                   })
	                    
	$("#tableshow").show();
	
     //lifusheng5月12日增加的动态查询内容************************
	
}

function clickline(obj,type){
	  alert(type);
	 var aliasAll =pageVariate.aliasAll;
	 var collection=aliasAll[type];
    console.log(collection);
     var thdcollection = "{";
    for(var key in  collection){  
		  if(type!=key){
				 thdcollection += "\"";
				 thdcollection += key;
				 thdcollection += "\"";
				 thdcollection += ":";
				 
				 thdcollection += "\"";
				 thdcollection += "";
				 thdcollection += "\"";
				 thdcollection += ",";
	        		   }
	         			  }  
thdcollection = thdcollection.substring(0, thdcollection.length - 1);
thdcollection += "}";
console.log(thdcollection);
var thdcollectionjson = $.parseJSON(thdcollection);

$(obj).find("td").each(function(i){
	
		console.log($(this).text());
	})
	console.log(thdcollection);
//var map=Map();  
//map.prototype("afei",25);  
//map.prototype("yaoming",31);  
//map.prototype("pp",2);  
//map.prototype("bill","55");  


}

//定义map       
function Map()       
{        
this.container = {};        
}        
    
//将key-value放入map中       
Map.prototype.put = function(key,value){        
try{        
      
if(key!=null && key != "")       
  this.container[key] = value;        
    
}catch(e){        
return e;        
}        
};        
    
//根据key从map中取出对应的value       
Map.prototype.get = function(key){        
try{        
    
return this.container[key];        
    
}catch(e){        
return e;        
}        
};        
    
//判断map中是否包含指定的key       
Map.prototype.containsKey=function(key){       
    
try{       
 for(var p in this.container)       
 {       
    if(this.p==key)       
       return true;       
 }       
    
 return false;       
    
}catch(e){       
 return e;       
}       
    
}       
    
//判断map中是否包含指定的value       
Map.prototype.containsValue = function(value){        
try{        
    
for(var p in this.container)       
{        
if(this.container[p] === value)        
   return true;        
}        
    
return false;        
    
}catch(e){        
return e;        
}        
};        
    
    
//删除map中指定的key       
Map.prototype.remove = function(key){        
try{        
    
delete this.container[key];        
    
}catch(e){        
return e;        
}        
};        
    
//清空map       
Map.prototype.clear = function(){        
try{        
delete this.container;        
this.container = {};        
    
}catch(e){        
  return e;        
}        
};        
    
//判断map是否为空       
Map.prototype.isEmpty = function(){        
      
if(this.keyArray().length==0)       
  return true;       
else        
  return false;       
};        
    
//获取map的大小       
Map.prototype.size=function(){       
    
return this.keyArray().length;       
}       
    
//返回map中的key值数组       
Map.prototype.keyArray=function(){       
    
  var keys=new Array();       
  for(var p in this.container)       
  {       
      keys.push(p);       
  }       
      
  return keys;       
}       
    
//返回map中的value值数组       
Map.prototype.valueArray=function(){       
     
  var values=new Array();       
  var keys=this.keyArray();       
  for(var i=0;i<keys.length;i++)       
  {       
     values.push(this.container[keys[i]]);       
  }       
         
  return values;       
}   

