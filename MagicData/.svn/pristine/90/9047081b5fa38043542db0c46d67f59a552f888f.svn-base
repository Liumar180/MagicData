package com.integrity.dataSmart.dataImport.action;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.apache.struts2.ServletActionContext;
import org.apache.struts2.json.annotations.JSON;

import com.integrity.dataSmart.dataImport.util.TitanStructureUtil;
import com.opensymphony.xwork2.ActionSupport;

/**
 * Titan结构维护action
 * @author RenSx
 *
 */
public class TitanStruAction extends ActionSupport{

	private static final long serialVersionUID = 1L;
	private Logger logger = Logger.getLogger(TitanStruAction.class);

	private File[] file;              //文件  
    private String[] fileFileName;    //文件名
    private String[] filePath;
    private String datas;
    
    private String fullJson;
    
    private String[] fileIdsImg;
    
    List<Map<String,Object>> titanList = null;
	
	HttpServletRequest request = ServletActionContext.getRequest();
	
	private boolean result = false;
	
	/**
	 * 上传图片+添加节点
	 * @return
	 */
	public String uploadImgs(){
		String imgPath = ServletActionContext.getServletContext().getRealPath(File.separator+"images"+File.separator+"img"+File.separator);
		File file = new File(imgPath);
		if(!file.exists()){
			file.mkdirs();
		}
		System.out.println(fileIdsImg);
		try{
			if(this.file!=null){
				File[] f = this.getFile(); 
				filePath = new String[f.length];
				for(int i=0;i<f.length;i++){
//					String name = fileFileName[i];
					String name = fileIdsImg[i]+".png";
					FileInputStream is = new FileInputStream(f[i]);
					FileOutputStream os = new FileOutputStream(imgPath+"\\"+name);
					byte[] b = new byte[1024];
					int length=0;
					while((length=is.read(b))!=-1){
						os.write(b,0,length);
					}
					is.close();
					os.flush();
					os.close();
					filePath[i] = imgPath+"\\"+name; 
				}
			}
			result = TitanStructureUtil.addTitanVertexFull(datas.replace("'", "\""));
		}catch(Exception e){
			logger.error("上传图片+添加节点 异常",e);
			result = false;
		}
		
		return SUCCESS;
	}
	
	/**
	 * 添加节点，接收参数fullJson是全部完整的结构
	 * @return
	 */
	public String addTitanVertexFull(){
		if(fullJson==null||"".equals(fullJson)){
			return SUCCESS;
		}
		try{
			result = TitanStructureUtil.addTitanVertexFull(fullJson);
		}catch(Exception e){
			e.printStackTrace();
		}
		return SUCCESS;
	}
	
	/**
	 * 添加节点
	 * @return String
	 */
	public String addTitanVertex(){
		String vertexName = request.getParameter("vertexName");
		String vertexJson = request.getParameter("vertexJson");
		titanList = TitanStructureUtil.addTitanVertex(vertexName, vertexJson);
		return SUCCESS;
	}
	/**
	 * 修改节点
	 * @return String
	 */
	public String updateTitanVertex(){
		String vertexName = request.getParameter("vertexName");
		String vertexJson = request.getParameter("vertexJson");
		titanList = TitanStructureUtil.updateTitanVertex(vertexName, vertexJson);
		return SUCCESS;
	}
	/**
	 * 删除节点
	 * @return
	 */
	public String deleteTitanVertex(){
		String vertexName = request.getParameter("vertexName");
		titanList = TitanStructureUtil.deleteTitanVertex(vertexName);
		return SUCCESS;
	}
	/**
	 * 添加边
	 * @return String
	 */
	public String addTitanEdge(){
		String edgeName = request.getParameter("edgeName");
		String edgeJson = request.getParameter("edgeJson");
		titanList = TitanStructureUtil.addTitanEdge(edgeName, edgeJson);
		return SUCCESS;
	}
	/**
	 * 修改边
	 * @return String
	 */
	public String updateTitanEdge(){
		String edgeName = request.getParameter("edgeName");
		String edgeJson = request.getParameter("edgeJson");
		titanList = TitanStructureUtil.updateTitanEdge(edgeName, edgeJson);
		return SUCCESS;
	}
	/**
	 * 删除边
	 * @return
	 */
	public String deleteTitanEdge(){
		String edgeName = request.getParameter("edgeName");
		titanList = TitanStructureUtil.deleteTitanEdge(edgeName);
		return SUCCESS;
	}
	
	public List<Map<String, Object>> getTitanList() {
		return titanList;
	}

	public void setTitanList(List<Map<String, Object>> titanList) {
		this.titanList = titanList;
	}

	public boolean isResult() {
		return result;
	}

	public void setResult(boolean result) {
		this.result = result;
	}

	@JSON(serialize=false)
	public File[] getFile() {
		return file;
	}

	public void setFile(File[] file) {
		this.file = file;
	}

	@JSON(serialize=false)
	public String[] getFileFileName() {
		return fileFileName;
	}

	public void setFileFileName(String[] fileFileName) {
		this.fileFileName = fileFileName;
	}
	
	@JSON(serialize=false)
	public String[] getFilePath() {
		return filePath;
	}

	public void setFilePath(String[] filePath) {
		this.filePath = filePath;
	}
	
	@JSON(serialize=false)
	public String getDatas() {
		return datas;
	}

	public void setDatas(String datas) {
		this.datas = datas;
	}

	@JSON(serialize=false)
	public String[] getFileIdsImg() {
		return fileIdsImg;
	}

	public void setFileIdsImg(String[] fileIdsImg) {
		this.fileIdsImg = fileIdsImg;
	}
	@JSON(serialize=false)
	public String getFullJson() {
		return fullJson;
	}

	public void setFullJson(String fullJson) {
		this.fullJson = fullJson;
	}
	
}
