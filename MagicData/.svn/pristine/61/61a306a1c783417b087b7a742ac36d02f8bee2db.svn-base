<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<!--  蜜罐平台-基本配置  -->
<!-- 
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://192.168.0.1:3306/cnnvdnew?useUnicode=true&amp;characterEncoding=UTF-8" />
        <property name="user" value="root" />
        <property name="password" value="123456" />
		<property name="autoCommitOnClose" value="true" />
		<property name="checkoutTimeout" value="5000"></property>
		<property name="initialPoolSize" value="1"></property>
		<property name="minPoolSize" value="1"></property>
		<property name="maxPoolSize" value="5"></property>
		<property name="maxIdleTime" value="25200"></property>
		<property name="maxIdleTimeExcessConnections" value="15000"></property>
		<property name="acquireIncrement" value="5"></property>
	</bean>
	
	<bean id="dataSourceHoney" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://192.168.0.188:3306/hflow?useUnicode=true&amp;characterEncoding=UTF-8" />
        <property name="user" value="viewer" />
        <property name="password" value="honey" />  
		<property name="autoCommitOnClose" value="true" />
		<property name="checkoutTimeout" value="5000"></property>
		<property name="initialPoolSize" value="1"></property>
		<property name="minPoolSize" value="1"></property>
		<property name="maxPoolSize" value="5"></property>
		<property name="maxIdleTime" value="25200"></property>
		<property name="maxIdleTimeExcessConnections" value="15000"></property>
		<property name="acquireIncrement" value="5"></property>
	</bean>
 -->
 
 	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations" >  
            <list>  
                <value>/WEB-INF/config/jdbc/jdbc.properties</value>  
            </list>  
        </property>  
    </bean> 
 
  	<!-- 数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${hibernate.driverClass}"/>
        <property name="jdbcUrl" value="${hibernate.jdbcUrl}"/>
        <property name="user" value="${hibernate.user}"/>
        <property name="password" value="${hibernate.password}"/>
        <!-- 连接池配置 -->
		<property name="minPoolSize" value="5" />  
		<property name="maxPoolSize" value="30" />  
		<property name="maxIdleTime" value="1800" />  
		<property name="acquireIncrement" value="3" />  
		<property name="maxStatements" value="1000" />  
		<property name="initialPoolSize" value="5" />  
		<property name="idleConnectionTestPeriod" value="60" />  
		<property name="acquireRetryAttempts" value="30" />  
		<property name="breakAfterAcquireFailure" value="true" />  
		<property name="testConnectionOnCheckout" value="false" />  
		
    </bean>

    <!-- SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingDirectoryLocations">
		     <list>
		         <value>classpath:/com/integrity/dataSmart/dataImport/bean</value>
		         <value>classpath:/com/integrity/dataSmart/pwdCrack/bean/</value>
		         <value>classpath:/com/integrity/dataSmart/titanGraph/bean/</value>
		         <value>classpath:/com/integrity/login/bean/</value>
		         <value>classpath:/com/integrity/lawCase/common/bean/</value>
		         <value>classpath:/com/integrity/lawCase/caseManage/bean/</value>
		         <value>classpath:/com/integrity/lawCase/relation/bean/</value>
		         <value>classpath:/com/integrity/lawCase/fileManage/bean/</value>
		         <value>classpath:/com/integrity/lawCase/hostManage/bean/</value>
		         <value>classpath:/com/integrity/lawCase/organizationManage/bean/</value>
		         <value>classpath:/com/integrity/lawCase/peopleManage/bean/</value>
		         <value>classpath:/com/integrity/system/audit/bean/</value>
		         <value>classpath:/com/integrity/system/auth/bean/</value>
		         <value>classpath:/com/integrity/system/dataType/bean/</value>
		         <value>classpath:/com/integrity/system/logManage/bean/</value>
<!-- 		     <value>classpath:/com/integrity/demo/bean/</value> -->
		     </list>
		</property>
        <property name="hibernateProperties">
             <props>
                <!-- 连接方言 -->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <!-- 是否根据映射文件创建数据表 -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>  
                <prop key="hibernate.connection.useUnicode">true</prop>
             </props>
        </property>
    </bean>
    
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" >  
        <property name="sessionFactory" ref="sessionFactory"></property>  
    </bean>  
    
    <aop:config>  
        <aop:pointcut id="txMethod" expression="execution(* *..service*..*(..))" />  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txMethod"/>  
    </aop:config>  
    <!-- 事务管理 -->  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="insert*" propagation="REQUIRED" /> 
            <tx:method name="add*" propagation="REQUIRED" /> 
            <tx:method name="update*" propagation="REQUIRED" /> 
            <tx:method name="modify*" propagation="REQUIRED" /> 
            <tx:method name="edit*" propagation="REQUIRED" /> 
            <tx:method name="delete*" propagation="REQUIRED" />  
            <tx:method name="clear*" propagation="REQUIRED" />
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>  
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>  
            <tx:method name="query*" propagation="SUPPORTS" read-only="true"/> 
<!--             <tx:method name="*" />   -->
        </tx:attributes>  
    </tx:advice> 
    
    
     

<!-- demo  -->
    <bean id="demoDao" class="com.integrity.demo.daoImpl.DemoDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="demoService" class="com.integrity.demo.serviceImpl.DemoServiceImpl">
        <property name="demoDao" ref="demoDao"/>
    </bean>

    <bean name="demoAction" class="com.integrity.demo.action.DemoAction" >
        <property name="demoService" ref="demoService"/>
    </bean>
    <!-- 
     <bean id="userDao" class="com.integrity.login.daoImpl.UserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
     -->
     <bean id="userDao" class="com.integrity.login.daoImpl.UserDaoImplNew">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="userService" class="com.integrity.login.serviceImpl.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
    </bean>
    <!-- 
	<bean id="loginAction" class="com.integrity.login.action.LoginAction" scope="prototype">
		<property name="userService" ref="userService"/>
	</bean>
	 -->
	<bean id="loginAction" class="com.integrity.login.action.LoginActionNew" scope="prototype">
		<property name="userService" ref="authUserService"/>
	</bean>
<!-- demo  -->
    <bean id="pageInfo" class="com.integrity.login.util.PageInfo" scope="prototype"/>
</beans>